{'cv': None, 'error_score': nan, 'estimator__estimator__algorithm': 'auto', 'estimator__estimator__leaf_size': 30, 'estimator__estimator__metric': 'minkowski', 'estimator__estimator__metric_params': None, 'estimator__estimator__n_jobs': None, 'estimator__estimator__n_neighbors': 5, 'estimator__estimator__p': 2, 'estimator__estimator__weights': 'uniform', 'estimator__estimator': KNeighborsClassifier(), 'estimator__n_jobs': None, 'estimator': MultiOutputClassifier(estimator=KNeighborsClassifier()), 'n_jobs': 6, 'param_grid': {'estimator__n_neighbors': range(3, 7), 'estimator__weights': ['uniform', 'distance'], 'estimator__algorithm': ['auto', 'kd_tree'], 'estimator__leaf_size': [15, 30, 45], 'estimator__metric': ['euclidean', 'minkowski', 'hamming', 'jaccard'], 'estimator__p': [1, 2, 3]}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': 'f1_micro', 'verbose': 0}
Run Time: 3:15:24.680963
Dataframe Size: (1327, 63)
Best Model: MultiOutputClassifier(estimator=KNeighborsClassifier(leaf_size=15,
                                                     metric='euclidean', p=1))
Best Params: {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}
GridSearch Results: {'mean_fit_time': array([6.20341301e-02, 9.43478107e-02, 9.23536777e-02, 8.95599365e-02,
       1.02725458e-01, 8.33801270e-02, 9.49461937e-02, 9.35492516e-02,
       9.69403267e-02, 9.47463989e-02, 9.61433411e-02, 8.57700825e-02,
       8.25788975e-02, 9.47466373e-02, 9.15573120e-02, 9.63425636e-02,
       9.11567211e-02, 9.91349220e-02, 1.02127266e-01, 8.19805145e-02,
       9.87362385e-02, 9.07574177e-02, 1.02326584e-01, 1.21276808e-01,
       1.00731277e-01, 6.78192139e-02, 7.02122688e-02, 7.46008873e-02,
       6.60236835e-02, 6.20337963e-02, 5.48537731e-02, 5.58505535e-02,
       6.14434719e-02, 6.54258728e-02, 5.98397255e-02, 5.70478916e-02,
       6.26325130e-02, 5.48533916e-02, 6.20395184e-02, 7.02180386e-02,
       6.24325275e-02, 5.96403122e-02, 6.19065285e-02, 5.54519653e-02,
       7.07706451e-02, 7.99930573e-02, 6.52772903e-02, 6.60748959e-02,
       5.80451012e-02, 6.35977268e-02, 6.24399662e-02, 6.99663162e-02,
       5.94481468e-02, 5.90476990e-02, 5.92416763e-02, 7.26037025e-02,
       5.84426403e-02, 5.68478107e-02, 8.75889778e-02, 6.94143295e-02,
       7.58097649e-02, 6.60295010e-02, 6.96143150e-02, 7.75991917e-02,
       6.96144581e-02, 7.02126026e-02, 6.88158989e-02, 8.54124546e-02,
       6.72200680e-02, 8.06924343e-02, 6.68274879e-02, 6.60238266e-02,
       6.52251244e-02, 7.10147381e-02, 6.20481491e-02, 6.20346069e-02,
       7.20617294e-02, 6.95412159e-02, 5.96467018e-02, 6.14361763e-02,
       5.96404076e-02, 6.78128719e-02, 6.34306908e-02, 6.24334812e-02,
       7.46055603e-02, 6.02443218e-02, 6.58414364e-02, 6.86448097e-02,
       7.00314045e-02, 6.78231716e-02, 5.98391056e-02, 7.72253990e-02,
       5.96406937e-02, 6.10373020e-02, 5.98452568e-02, 7.00927258e-02,
       6.52259350e-02, 7.67939568e-02, 7.61969090e-02, 8.55711937e-02,
       8.71664047e-02, 9.03589725e-02, 1.04121590e-01, 9.73399162e-02,
       9.71397400e-02, 8.39752674e-02, 9.37498093e-02, 1.01928186e-01,
       1.10670042e-01, 9.41504002e-02, 1.85777044e-01, 1.30258942e-01,
       1.16687202e-01, 1.25264597e-01, 1.37441969e-01, 1.07113409e-01,
       1.21235085e-01, 1.06992674e-01, 1.11700916e-01, 1.16279554e-01,
       1.27231359e-01, 8.20101738e-02, 6.40288830e-02, 8.73654842e-02,
       6.18475914e-02, 5.84508896e-02, 5.82451344e-02, 5.62495708e-02,
       6.22338295e-02, 6.84221745e-02, 5.70477962e-02, 5.93171597e-02,
       5.73092937e-02, 5.72416782e-02, 6.16360664e-02, 6.98133469e-02,
       5.84445953e-02, 5.58517456e-02, 5.72473049e-02, 5.96462250e-02,
       5.94405651e-02, 6.98132992e-02, 5.94481945e-02, 5.52526474e-02,
       5.80501080e-02, 5.76515675e-02, 5.84446430e-02, 5.74462414e-02,
       6.20403767e-02, 6.10371113e-02, 5.92358589e-02, 6.34318829e-02,
       6.50310516e-02, 6.68270588e-02, 6.76195145e-02, 7.44006157e-02,
       7.39974022e-02, 7.06118584e-02, 7.12097168e-02, 6.76193237e-02,
       6.96205616e-02, 7.44009018e-02, 7.10119247e-02, 7.10107803e-02,
       6.90225124e-02, 7.16144562e-02, 6.82189941e-02, 7.02130795e-02,
       6.94143295e-02, 6.08372688e-02, 5.96401691e-02, 5.82422733e-02,
       5.94415188e-02, 6.04382992e-02, 5.82445145e-02, 5.68478107e-02,
       5.72467327e-02, 6.66219711e-02, 6.46268368e-02, 7.14027405e-02,
       6.84240341e-02, 7.80760288e-02, 5.78454971e-02, 6.02393150e-02,
       7.64025211e-02, 6.04393005e-02, 6.02395058e-02, 5.88436604e-02,
       6.43259525e-02, 5.90491772e-02, 6.32302284e-02, 6.21410847e-02,
       6.90100670e-02, 7.18078613e-02, 9.93334770e-02, 1.50245333e-01,
       9.87358093e-02, 9.47471619e-02, 9.61422920e-02, 8.81637096e-02,
       1.01727486e-01, 9.37498093e-02, 8.57708454e-02, 9.53444958e-02,
       9.85366344e-02, 9.85356331e-02, 1.01329327e-01, 9.99325275e-02,
       9.63420868e-02, 9.47462559e-02, 1.03323650e-01, 9.71403122e-02,
       9.55438614e-02, 9.23537254e-02, 1.17085361e-01, 1.16836405e-01,
       8.27783108e-02, 6.44335270e-02, 6.80188656e-02, 8.72758865e-02,
       6.26381874e-02, 5.60503483e-02, 5.54518700e-02, 6.00399971e-02,
       6.68272972e-02, 6.40294552e-02, 6.00392818e-02, 5.52519321e-02,
       6.10366821e-02, 6.20342255e-02, 7.12106705e-02, 6.88162804e-02,
       5.92526436e-02, 6.12082958e-02, 5.80448627e-02, 6.60401344e-02,
       9.58976269e-02, 7.24116802e-02, 6.20415688e-02, 5.80449104e-02,
       5.68475246e-02, 5.98463535e-02, 5.66484928e-02, 6.12367153e-02,
       5.82446098e-02, 6.62348747e-02, 6.00392342e-02, 5.86433411e-02,
       6.78238869e-02, 6.46267891e-02, 5.90449810e-02, 6.46338463e-02,
       7.22077370e-02, 7.59970188e-02, 6.56243801e-02, 6.52256012e-02,
       8.10726166e-02, 6.60241604e-02, 6.90154552e-02, 7.51991749e-02,
       7.65945911e-02, 7.44008541e-02, 7.57915974e-02, 7.99921513e-02,
       6.72204018e-02, 6.00446224e-02, 6.00454330e-02, 5.92413902e-02,
       6.26327038e-02, 6.40281200e-02, 6.08375072e-02, 6.14358425e-02,
       6.36301517e-02, 6.36495113e-02, 6.40283108e-02, 6.02395535e-02,
       6.00466251e-02, 5.96398354e-02, 6.06506348e-02, 5.84452629e-02,
       6.26387119e-02, 6.14296913e-02, 6.18348598e-02, 5.88429928e-02,
       5.98407269e-02, 5.98459244e-02, 6.44281387e-02, 6.10376358e-02,
       5.38519750e+00, 5.62635269e+00, 5.65845995e+00, 5.28686066e+00,
       5.23878956e+00, 5.41292558e+00, 5.39876375e+00, 5.26811061e+00,
       5.28367672e+00, 5.27250590e+00, 5.31239285e+00, 5.35209336e+00,
       5.26931510e+00, 7.44768114e+00, 5.70813503e+00, 5.59064937e+00,
       5.65547528e+00, 5.31438661e+00, 5.31080332e+00, 5.60441117e+00,
       5.39798632e+00, 5.35148978e+00, 5.41212616e+00, 5.25573921e+00,
       5.20767765e+00, 5.18433657e+00, 5.35773587e+00, 5.38938656e+00,
       5.15502653e+00, 5.47774105e+00, 5.17108607e+00, 5.29173951e+00,
       5.59656076e+00, 5.79637127e+00, 5.34280710e+00, 5.13375034e+00,
       5.09381456e+00, 5.17833247e+00, 5.10660596e+00, 5.04457211e+00,
       5.05440431e+00, 5.07216611e+00, 5.01634803e+00, 4.87021084e+00,
       5.09593205e+00, 5.00418692e+00, 5.11047573e+00, 4.95783491e+00,
       2.59885788e-03, 2.20131874e-03, 2.59308815e-03, 2.60891914e-03,
       2.59981155e-03, 2.21095085e-03, 3.38649750e-03, 2.99210548e-03,
       2.59251595e-03, 1.99460983e-03, 2.19402313e-03, 2.19998360e-03,
       2.39877701e-03, 1.59592628e-03, 2.39329338e-03, 1.79529190e-03,
       2.19411850e-03, 1.59611702e-03, 1.99465752e-03, 2.19416618e-03,
       1.99460983e-03, 1.99480057e-03, 2.19392776e-03, 1.99470520e-03,
       1.79524422e-03, 1.99909210e-03, 1.99937820e-03, 1.39617920e-03,
       1.79519653e-03, 1.99451447e-03, 1.79519653e-03, 1.79862976e-03,
       1.99055672e-03, 1.58791542e-03, 1.78999901e-03, 1.59602165e-03,
       1.99813843e-03, 1.59616470e-03, 1.79519653e-03, 1.99480057e-03,
       1.99460983e-03, 1.79524422e-03, 2.39343643e-03, 2.19426155e-03,
       1.79514885e-03, 1.39641762e-03, 1.59578323e-03, 1.79543495e-03,
       4.08108072e+00, 4.23347812e+00, 4.26161127e+00, 4.11739860e+00,
       4.32978215e+00, 4.19597888e+00, 4.56626606e+00, 4.44942336e+00,
       4.43606720e+00, 4.42738099e+00, 4.53154106e+00, 4.48267322e+00,
       4.44433751e+00, 4.55562458e+00, 4.51364846e+00, 4.56499071e+00,
       4.45150075e+00, 4.55621953e+00, 4.70242381e+00, 4.50574083e+00,
       4.51013827e+00, 4.46865139e+00, 4.45408835e+00, 4.44571671e+00,
       4.37809081e+00, 4.83407235e+00, 4.53766489e+00, 4.44399037e+00,
       4.41531129e+00, 4.23228731e+00, 4.29505568e+00, 4.25484324e+00,
       4.66328120e+00, 4.41938186e+00, 4.40041790e+00, 4.50678263e+00,
       4.58114529e+00, 4.44431505e+00, 4.47024517e+00, 4.38726716e+00,
       4.09963665e+00, 4.13873749e+00, 4.10283270e+00, 4.07790031e+00,
       4.38686752e+00, 4.30628972e+00, 4.14351916e+00, 4.14173117e+00,
       2.39429474e-03, 2.19416618e-03, 2.79226303e-03, 2.39343643e-03,
       1.99451447e-03, 2.39353180e-03, 2.19383240e-03, 2.79254913e-03,
       1.99432373e-03, 1.79538727e-03, 2.39381790e-03, 1.99456215e-03,
       2.20088959e-03, 2.00214386e-03, 1.99480057e-03, 1.59578323e-03,
       1.99394226e-03, 1.99460983e-03, 2.39367485e-03, 2.19430923e-03,
       1.59564018e-03, 1.99456215e-03, 1.99456215e-03, 1.59592628e-03,
       1.99456215e-03, 1.59564018e-03, 1.99475288e-03, 1.99418068e-03,
       1.99460983e-03, 1.59583092e-03, 1.79586411e-03, 1.78484917e-03,
       1.79314613e-03, 1.99494362e-03, 1.80573463e-03, 2.00200081e-03,
       1.58281326e-03, 1.99475288e-03, 2.19402313e-03, 1.59564018e-03,
       1.59587860e-03, 1.79519653e-03, 1.99451447e-03, 2.19416618e-03,
       1.59592628e-03, 1.79505348e-03, 1.79519653e-03, 1.99470520e-03,
       4.32069006e+00, 4.33800483e+00, 4.42854300e+00, 4.40782328e+00,
       4.58095045e+00, 4.44332271e+00, 4.60778799e+00, 4.60189319e+00,
       4.73353553e+00, 4.64856610e+00, 4.82212486e+00, 4.67170620e+00,
       4.68866158e+00, 4.62523170e+00, 4.89012341e+00, 4.93549538e+00,
       4.77157516e+00, 5.15919704e+00, 5.19590969e+00, 4.95993462e+00,
       4.98427057e+00, 4.76219416e+00, 4.59112177e+00, 4.75029602e+00,
       4.52928729e+00, 5.24038682e+00, 4.96791334e+00, 4.88701978e+00,
       4.91487708e+00, 4.54009809e+00, 4.48965840e+00, 5.50809712e+00,
       4.30289793e+00, 5.30221901e+00, 4.56379499e+00, 3.99472337e+00,
       3.98534102e+00, 4.03710389e+00, 4.05734935e+00, 4.12257462e+00,
       3.98354616e+00, 4.14471569e+00, 4.16805859e+00, 4.13474727e+00,
       4.18142223e+00, 4.08648558e+00, 4.15828018e+00, 4.14728127e+00,
       2.79159546e-03, 2.99220085e-03, 2.79226303e-03, 2.79226303e-03,
       2.79259682e-03, 2.39381790e-03, 2.59299278e-03, 1.99456215e-03,
       1.99437141e-03, 2.19359398e-03, 1.99480057e-03, 2.59304047e-03,
       2.41384506e-03, 1.98740959e-03, 2.40025520e-03, 2.38599777e-03,
       2.40039825e-03, 2.00095177e-03, 2.19383240e-03, 1.79510117e-03,
       1.79557800e-03, 2.19421387e-03, 2.20155716e-03, 1.79195404e-03,
       1.99456215e-03, 1.59049034e-03, 1.99494362e-03, 1.60250664e-03,
       1.59449577e-03, 1.99470520e-03, 1.79557800e-03, 1.99475288e-03,
       2.19416618e-03, 1.79495811e-03, 1.99456215e-03, 1.79524422e-03,
       1.79481506e-03, 1.99465752e-03, 1.99465752e-03, 1.99475288e-03,
       2.00524330e-03, 1.99446678e-03, 2.60610580e-03, 2.39410400e-03,
       2.39324570e-03, 1.99441910e-03, 2.39343643e-03, 2.99191475e-03]), 'std_fit_time': array([3.98874326e-04, 2.10966735e-02, 1.18116060e-02, 1.39253312e-02,
       4.03908327e-03, 4.74493358e-03, 8.03797444e-03, 1.34313025e-02,
       9.34302441e-03, 6.67532683e-03, 1.18108788e-02, 9.83265769e-03,
       7.76151447e-03, 1.43984280e-02, 1.24504011e-02, 9.19647966e-03,
       3.12931103e-03, 1.30276365e-02, 1.10092088e-02, 5.17896406e-03,
       1.67470977e-02, 1.21327850e-02, 1.87929580e-02, 1.25301413e-02,
       1.99661583e-02, 4.88508529e-03, 7.58474697e-03, 4.43356833e-03,
       5.96440187e-03, 1.04866946e-02, 6.30449660e-04, 1.54551064e-03,
       5.07097373e-03, 4.82852194e-03, 3.73195568e-03, 1.46561618e-03,
       9.59475017e-03, 6.31580535e-04, 4.15348523e-03, 7.07604327e-03,
       1.27656692e-02, 1.05805722e-02, 6.44548797e-03, 1.35271187e-03,
       1.39588614e-02, 1.83892523e-02, 1.45899652e-02, 2.04779499e-02,
       3.47807392e-03, 1.07452320e-02, 5.66954377e-03, 1.31423482e-02,
       1.84412099e-03, 3.90663511e-03, 2.64523645e-03, 1.93339915e-02,
       2.41032918e-03, 8.92550424e-04, 2.51817976e-02, 2.64569990e-03,
       1.58077294e-02, 1.32210435e-03, 4.25021864e-03, 1.39494506e-02,
       4.05384122e-03, 8.33564210e-03, 3.27788473e-03, 2.59257905e-02,
       3.81644432e-03, 3.17250316e-02, 2.74527915e-03, 1.16401240e-03,
       2.32608288e-03, 1.19794447e-02, 2.62711935e-03, 7.31252046e-03,
       2.03724740e-02, 1.12294047e-02, 3.85677915e-03, 5.06995694e-03,
       1.59573567e-03, 1.59908634e-02, 5.80196911e-03, 2.86317588e-03,
       1.47634996e-02, 3.48909576e-03, 1.20528357e-02, 1.76654235e-02,
       1.11379584e-02, 9.20837882e-03, 2.60048851e-03, 2.26321442e-02,
       2.63150163e-03, 3.69944511e-03, 2.36941119e-03, 1.06710284e-02,
       1.01591526e-03, 6.49430134e-03, 1.01037389e-02, 9.21420539e-03,
       4.82852388e-03, 9.98508301e-03, 8.11572582e-03, 3.25337045e-03,
       9.06700532e-03, 5.44072588e-03, 1.59198540e-02, 1.22051594e-02,
       1.57331795e-02, 1.04106757e-02, 3.32869558e-02, 2.02833019e-02,
       9.81163049e-03, 4.15459042e-02, 3.32942993e-02, 1.49605157e-02,
       4.02727246e-02, 3.77651975e-02, 3.29131827e-02, 3.87046591e-02,
       3.36560371e-02, 4.28510760e-02, 3.24059336e-03, 1.88127490e-02,
       6.60486353e-03, 4.43810704e-03, 7.31856471e-03, 1.49259109e-03,
       7.20880066e-03, 9.01766044e-03, 3.11586031e-03, 5.54800408e-03,
       3.61564042e-03, 3.92170604e-03, 4.56676635e-03, 1.14756788e-02,
       3.37315196e-03, 1.54664975e-03, 2.05362758e-03, 6.28545170e-03,
       2.23915643e-03, 2.09030504e-03, 4.48760236e-03, 4.88344241e-04,
       1.16244458e-03, 3.75089502e-03, 2.32531007e-03, 1.01707415e-03,
       3.17008715e-03, 3.64459648e-03, 1.18908712e-03, 4.82826781e-03,
       4.10862256e-03, 3.61566420e-03, 7.86249194e-03, 4.30596966e-03,
       8.19016183e-03, 3.24153537e-03, 4.91116153e-03, 7.45525785e-04,
       3.04716129e-03, 8.56979170e-03, 4.43296358e-03, 4.56643102e-03,
       2.03352751e-03, 5.37701701e-03, 2.32646290e-03, 1.01772885e-03,
       1.14689378e-02, 4.03927163e-03, 1.16249950e-03, 1.02283546e-03,
       2.23858299e-03, 2.71935176e-03, 1.73872382e-03, 1.54514127e-03,
       1.95508930e-03, 3.85811182e-03, 1.16371157e-03, 5.86162033e-03,
       6.00428579e-03, 2.40799164e-02, 1.26191686e-03, 2.14833587e-03,
       1.73732714e-02, 1.49288433e-03, 5.29999683e-03, 1.40622940e-03,
       9.73876922e-03, 1.71594563e-03, 4.70350178e-03, 2.11776280e-03,
       7.09330017e-03, 1.89175050e-03, 1.10075896e-02, 3.38231201e-02,
       7.32873588e-03, 8.94281655e-03, 8.23873195e-03, 7.74137080e-03,
       1.26152389e-02, 6.33920182e-03, 7.59650648e-03, 8.14179909e-03,
       1.16713210e-02, 1.50919233e-02, 1.63581207e-02, 7.81239584e-03,
       9.41133890e-03, 6.46312743e-03, 1.15034382e-02, 1.36685722e-02,
       1.09509049e-02, 9.78390338e-03, 1.23046903e-02, 2.88747546e-02,
       6.33884921e-03, 7.25952901e-03, 5.25555184e-03, 2.63094377e-02,
       8.75095895e-03, 2.47563764e-03, 1.19733836e-03, 3.80623035e-03,
       9.00612969e-03, 3.30176188e-03, 4.86150715e-03, 4.88831226e-04,
       1.16297411e-03, 2.47475021e-03, 1.07157435e-02, 1.41124520e-03,
       6.74442042e-03, 1.12204069e-02, 3.69935761e-03, 1.38304940e-02,
       8.00402504e-03, 9.48949488e-03, 7.41553073e-03, 3.42042723e-03,
       1.99475300e-03, 1.66447683e-03, 1.16209077e-03, 3.86827729e-03,
       2.49092716e-03, 7.69410779e-03, 2.03338176e-03, 3.24183472e-03,
       9.86773213e-03, 8.47228749e-03, 2.03365275e-03, 1.94462099e-03,
       8.77628330e-03, 1.54287864e-02, 2.03484043e-03, 1.95492871e-03,
       1.64607424e-02, 1.32243808e-03, 5.14032181e-03, 6.78116860e-03,
       8.90723856e-03, 3.86870021e-03, 4.03356104e-03, 6.00448717e-03,
       9.94532356e-03, 2.47942191e-03, 5.58426578e-03, 4.01889257e-03,
       4.15597025e-03, 1.09866797e-02, 3.15386089e-03, 4.57556964e-03,
       3.70073307e-03, 9.43652322e-03, 5.54557869e-03, 4.61819969e-03,
       2.02792093e-03, 3.05132547e-03, 2.32142876e-03, 1.61930856e-03,
       4.42404158e-03, 4.65710612e-03, 5.38813323e-03, 2.27361963e-03,
       3.33742127e-03, 3.38958680e-03, 5.55654384e-03, 4.82065825e-03,
       4.90366404e-02, 1.93386168e-01, 4.44437962e-01, 2.18238864e-02,
       3.20607404e-02, 3.23370225e-01, 1.42317266e-01, 5.01189230e-02,
       7.89832701e-02, 2.52349259e-02, 4.45558441e-02, 6.26640168e-02,
       2.17295852e-02, 1.25612072e+00, 2.95671500e-01, 2.82633506e-01,
       2.52453990e-01, 3.11926665e-02, 3.36467907e-02, 1.94079381e-01,
       8.96171639e-02, 7.58920575e-02, 1.67280228e-01, 7.30711384e-02,
       7.52000443e-02, 4.31981055e-02, 8.56671623e-02, 1.49928789e-01,
       1.50697978e-01, 3.40155880e-01, 1.09013467e-01, 1.31214822e-01,
       1.72396347e-01, 3.65285370e-01, 1.17755181e-01, 7.91808626e-02,
       7.25198640e-02, 1.90357851e-01, 2.40622003e-01, 8.00631148e-02,
       9.05022731e-02, 9.48710728e-02, 1.45964308e-01, 6.11313967e-02,
       7.96882861e-02, 9.95384267e-02, 8.98546189e-02, 1.28595241e-01,
       4.92776416e-04, 3.95542904e-04, 4.88363511e-04, 4.73277601e-04,
       4.94379389e-04, 3.90755777e-04, 7.94417517e-04, 6.30901862e-04,
       4.88967093e-04, 6.30826420e-04, 9.77797824e-04, 7.51987931e-04,
       4.95375918e-04, 7.98082729e-04, 4.88382972e-04, 7.46289213e-04,
       3.99017505e-04, 7.98118116e-04, 6.30675638e-04, 3.98874525e-04,
       6.30675630e-04, 6.30524830e-04, 1.16294932e-03, 2.43140197e-07,
       3.98969665e-04, 2.08156761e-05, 6.38926153e-04, 4.88811234e-04,
       3.98708284e-04, 6.30600251e-04, 7.46136276e-04, 3.87682129e-04,
       6.30847090e-04, 4.95480465e-04, 4.11370111e-04, 5.02731824e-04,
       1.21489649e-05, 4.88675562e-04, 3.98945819e-04, 2.33601546e-07,
       6.30675666e-04, 3.98969778e-04, 4.88168929e-04, 7.46391189e-04,
       3.98804421e-04, 4.88324671e-04, 4.88363511e-04, 3.99542438e-04,
       6.87962098e-02, 9.23187749e-02, 1.38739353e-01, 6.25381022e-02,
       2.36402379e-01, 1.51694352e-01, 2.31065416e-01, 8.38294382e-02,
       7.58367700e-02, 1.07601978e-01, 1.33581508e-01, 8.67898205e-02,
       1.43403784e-01, 2.21417624e-01, 8.75476936e-02, 1.25821167e-01,
       6.36110178e-02, 1.26314890e-01, 3.19780444e-01, 9.08561016e-02,
       1.99877169e-01, 9.89245772e-02, 1.06343612e-01, 1.03060370e-01,
       5.04944780e-02, 2.76204985e-01, 2.01698735e-01, 5.76163423e-02,
       5.37579416e-02, 9.59534591e-02, 2.21004903e-01, 1.90042753e-01,
       3.23790914e-01, 8.52322705e-02, 2.23826469e-01, 1.37282188e-01,
       1.62058748e-01, 1.40449023e-01, 9.59647172e-02, 3.02248253e-01,
       4.41072246e-02, 1.10516151e-02, 1.71505519e-01, 8.04456461e-02,
       3.64741969e-01, 1.09278317e-01, 7.65299606e-02, 6.11375356e-02,
       4.88636458e-04, 3.98874867e-04, 3.99780273e-04, 4.88363674e-04,
       2.43140197e-07, 4.88675073e-04, 3.99041642e-04, 3.98969693e-04,
       6.30902186e-04, 3.99160627e-04, 4.88441565e-04, 6.30675638e-04,
       4.11963639e-04, 6.34073027e-04, 6.30826481e-04, 4.88558226e-04,
       6.29922269e-04, 1.50789149e-07, 4.88655531e-04, 3.99518052e-04,
       4.88246757e-04, 6.46813391e-07, 5.09122765e-07, 4.88480359e-04,
       6.30826427e-04, 4.88538707e-04, 6.30600233e-04, 5.09122765e-07,
       0.00000000e+00, 4.88597160e-04, 3.98087798e-04, 4.06885999e-04,
       3.98330594e-04, 5.13569337e-07, 7.51125682e-04, 6.41723366e-04,
       4.91351999e-04, 1.16800773e-07, 3.98707429e-04, 4.88636109e-04,
       4.88441379e-04, 3.98826656e-04, 6.31731273e-04, 3.98874326e-04,
       4.88480335e-04, 3.98874354e-04, 7.45881398e-04, 1.16800773e-07,
       1.07866565e-01, 9.30880556e-02, 1.49219410e-01, 1.07647728e-01,
       1.56437419e-01, 1.30306997e-01, 1.92478157e-01, 1.39450463e-01,
       2.39495759e-01, 2.18167519e-01, 2.67793503e-01, 2.53180921e-01,
       1.28444982e-01, 4.20990390e-02, 3.20089846e-01, 1.91236693e-01,
       3.15495503e-01, 4.82491264e-01, 2.57073061e-01, 3.35991823e-01,
       1.52152163e-01, 1.60254896e-01, 1.01762498e-01, 1.72479909e-01,
       9.85788542e-02, 3.23663855e-01, 2.26969475e-01, 2.36252680e-01,
       1.74036440e-01, 2.60062586e-01, 6.81640184e-02, 1.31364042e+00,
       8.86478185e-02, 1.40948840e+00, 8.23021492e-01, 2.93943358e-02,
       1.77288046e-02, 1.13598248e-01, 4.40782297e-02, 1.09972980e-01,
       3.11733169e-02, 6.33512073e-02, 7.86617393e-02, 7.83865589e-02,
       5.98300351e-02, 3.20056367e-02, 1.01419701e-01, 1.02904200e-01,
       3.98732458e-04, 6.30826409e-04, 3.98945848e-04, 3.98826628e-04,
       3.98874297e-04, 4.88441588e-04, 4.88967232e-04, 2.33601546e-07,
       6.31052752e-04, 3.99160912e-04, 8.92070001e-04, 4.89200787e-04,
       5.00348450e-04, 6.30778541e-04, 4.84193106e-04, 5.05757655e-04,
       8.10265616e-04, 6.30203503e-04, 3.98921995e-04, 3.98779785e-04,
       3.97826313e-04, 9.77223415e-04, 3.98934802e-04, 3.98760843e-04,
       6.31052831e-04, 4.84151015e-04, 3.56832255e-07, 4.81301311e-04,
       4.87511636e-04, 8.92069966e-04, 7.45919895e-04, 1.16800773e-07,
       3.98874297e-04, 3.99422685e-04, 8.97163759e-07, 3.98850452e-04,
       3.99113015e-04, 2.33601546e-07, 1.78416128e-07, 1.65535996e-05,
       6.39650355e-04, 6.14361702e-07, 4.99739160e-04, 4.88694899e-04,
       4.88812095e-04, 1.78416128e-07, 4.88558203e-04, 3.01578299e-07]), 'mean_score_time': array([  3.87978368,   1.3188252 ,   1.29294219,   0.81242652,
         1.25803618,   0.76814237,   1.29374051,   0.83157778,
         1.27838092,   0.80624413,   1.28456383,   0.81522064,
         1.26362133,   0.82838435,   1.28954906,   0.8170145 ,
         1.28476324,   0.84394317,   1.29334044,   0.83337121,
         1.27120028,   0.87725387,   1.47126455,   0.92492633,
         8.82799172,   8.65305896,   1.04819617,   0.68915725,
       202.42604914, 202.22940264,   7.40818834,   7.11696649,
         0.90596995,   0.57945547, 203.55045667, 204.34392114,
         7.38645325,   7.06849017,   0.92831211,   0.60777574,
       204.53520489, 204.96238222,   7.60837474,   7.4297749 ,
         0.95639348,   0.67721066, 205.03982606, 212.61048803,
         8.16023173,   8.04799347,   9.02083173,   8.23759594,
         8.61436691,   8.07893815,   8.04991622,   8.20223498,
         8.58214359,   8.11107063,  10.39198675,   9.79188352,
         9.72340236,   9.29414535,  10.26159606,  10.38006554,
         9.9155973 ,  10.00328941,  11.32968254,  10.29884539,
         9.94557352,  10.13040962,   9.48841839,   9.20478477,
        10.37879009,   9.7177803 ,   9.97113008,  10.05233159,
        10.4010993 ,   9.79045887,  10.2637084 ,   9.92960987,
        10.16725235,   9.52097864,  10.10742288,  10.41026454,
        10.23537107,  10.12136998,  10.47820463,   9.82729316,
        10.065732  ,   9.69033117,  10.6213131 ,  10.19389935,
         9.89235716,   9.55005937,  10.09794512,  10.61732931,
         0.9504642 ,   0.6037858 ,   1.07772312,   0.70252085,
         1.20776973,   0.77891655,   1.35218325,   0.84334431,
         1.33183861,   0.84334512,   1.33562813,   0.85266213,
         1.41832347,   1.11860371,   1.86857781,   0.97569499,
         1.50030222,   1.008318  ,   1.38281665,   1.00044217,
         1.5093307 ,   1.03325934,   1.50178337,   0.91055164,
         9.44575391,   8.65992665,   0.98368201,   0.65955677,
       204.66290073, 204.63307447,   7.81938901,   7.36137671,
         0.89979358,   0.58523641, 204.4021965 , 204.33287058,
         7.74448762,   7.07846956,   0.90438137,   0.59121957,
       205.82040358, 204.49840946,   7.59292169,   7.30271816,
         0.92033877,   0.6075747 , 206.13313661, 217.21857991,
         8.82678881,   7.79056559,   8.24614615,   7.94056478,
         8.50146408,   7.94623909,   8.45757036,   8.47274055,
         8.98196554,   8.91938548,  10.28549361,   9.79999719,
        10.28458142,  10.01917634,  10.16960368,   9.79680009,
        10.09220443,   9.74733348,  10.10517359,   9.71103063,
        10.05629926,   9.69227977,  10.14646525,   9.3402266 ,
        10.47538567,   9.98889322,  10.21149139,   9.93023891,
        10.09795976,   9.48004541,   9.61448698,   9.52066259,
        10.92282667,  10.99408512,  11.28011723,  10.56547952,
        10.74431024,   9.85867586,  10.01910567,   9.94854827,
        10.18326092,   9.5444736 ,  10.05723763,   9.8622045 ,
        10.16955872,  10.04672747,  10.52726607,  10.46177998,
         1.0485734 ,   0.73323927,   1.25582042,   1.00148025,
         1.29354095,   0.80923557,   1.31967168,   0.81242771,
         1.31568127,   0.84035196,   1.33024211,   0.82878432,
         1.32725024,   0.83875699,   1.31189184,   0.8130259 ,
         1.32366037,   0.82798667,   1.29413915,   0.82319827,
         1.39296579,   0.9260828 ,   1.60685058,   0.87078943,
         8.48451672,   8.59303641,   1.03974504,   0.68524337,
       207.52515583, 204.65145674,   7.63738389,   7.36673722,
         0.9075665 ,   0.5670835 , 204.75619073, 208.28193293,
         8.32693124,   7.6854331 ,   0.99174743,   0.57865186,
       204.34464087, 206.79974456,   7.69277959,   8.09297442,
         1.3958262 ,   0.62292948, 209.15551162, 212.30275159,
         8.35026956,   7.8431087 ,   8.05929604,   7.71662869,
         8.17513146,   8.4219234 ,   8.25912199,   8.03617072,
         8.38510175,   8.09662275,   9.18862863,   9.7501194 ,
        10.37426057,   9.56820593,   9.76196575,   9.70618601,
        10.13319011,   9.49266138,  10.34513783,  10.42870998,
        10.70736594,  10.38243394,  10.79433341,   9.64958858,
        10.17898498,   9.67412944,   9.94439898,   9.69686952,
         9.87838163,   9.80438132,   9.98409948,   9.67472773,
         9.9256556 ,   9.79920049,  10.08802085,   9.70664039,
         9.9735147 ,   9.65717444,  10.10835643,   9.75731683,
        10.20530763,   9.82911968,  10.0840261 ,   9.93981757,
        10.12274189,   9.96634059,  10.1739913 ,   9.81355495,
        15.65433626,  15.71178169,  15.2673717 ,  14.85926228,
        15.19915214,  14.783464  ,  15.1788065 ,  14.86644225,
        15.17980413,  14.94741926,  15.38665709,  14.94103775,
        16.94208398,  15.79934773,  15.59650269,  15.32720976,
        15.34836531,  15.35533586,  15.50931821,  15.30173779,
        15.41364732,  14.87282534,  15.24662676,  14.82974091,
        11.39252863,  11.47761035,  15.60295892,  14.65839396,
       208.47597923, 217.50570154,  10.74617977,  10.64980869,
        16.29566898,  15.23708506, 211.67819743, 211.16217508,
        10.56935139,  10.35411377,  14.75127349,  14.02380795,
       208.31424356, 207.93728185,  10.51617246,   9.96359525,
        14.14410634,  13.85096965, 209.87498965, 208.88642068,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
        10.37925844,  10.12949305,  10.41873074,  10.05772099,
        11.1084691 ,  10.46441817,  11.61915665,  11.25766249,
        11.7203651 ,  11.57576947,  11.65446362,  11.53964386,
        11.84265375,  11.65045667,  11.97204709,  11.73788352,
        11.8441884 ,  11.23062758,  11.9060359 ,  11.19566627,
        11.36321697,  11.06141777,  11.44779196,  11.20223579,
        11.16434345,   9.76269112,  11.42863688,  10.945328  ,
       225.80665927, 216.06987271,   9.13490605,   8.96026144,
        11.27551446,  10.47465076, 220.46533518, 217.19347773,
         9.62545934,   9.12938428,  11.22498136,  10.44726849,
       204.19571819, 206.91225286,   9.12459311,   8.58324032,
        10.85457134,  10.11095414, 205.54730353, 213.08824015,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
        10.66941743,  10.51792293,  10.77734404,  10.57510824,
        11.78605928,  10.8627018 ,  11.97807856,  11.80465269,
        12.29793983,  11.64126964,  11.80582843,  12.18718572,
        11.98395071,  11.62905531,  12.43147111,  12.52502627,
        12.21733165,  13.04371762,  12.9503623 ,  12.4361423 ,
        12.81484509,  11.64159622,  12.32962637,  11.47790418,
        10.72990465,  10.87990355,  12.69137664,  11.58538542,
       213.91839433, 229.74618874,  10.77618012,  12.41924858,
        10.65469856,  13.47796845, 199.66849012, 200.78576217,
         8.73184915,   8.55440822,  10.27033334,   9.95956593,
       202.34342499, 205.09801059,   8.992485  ,   8.64787669,
        10.47617803,  10.09840631, 205.7900322 , 192.40939302,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ]), 'std_score_time': array([6.52061211e-02, 1.01946480e+00, 6.86127396e-02, 2.02500943e-02,
       2.93464411e-02, 2.32814268e-02, 2.08667905e-02, 3.51790517e-02,
       4.92385112e-02, 3.05356877e-02, 3.75714587e-02, 2.56186449e-02,
       4.84128907e-02, 2.15070453e-02, 4.96800649e-02, 1.73937915e-02,
       4.93986118e-02, 1.48911696e-02, 3.07030857e-02, 4.06860338e-02,
       6.65105660e-02, 7.55858895e-02, 5.86974264e-02, 2.54700611e-02,
       7.78345898e-02, 1.13078853e-01, 3.08815475e-02, 2.44055942e-02,
       8.06402501e-01, 8.24453107e-01, 5.51300278e-02, 6.87106548e-02,
       2.85662166e-02, 8.66884978e-03, 1.07554305e+00, 8.84255604e-01,
       2.35858260e-02, 4.06722262e-02, 2.70154897e-02, 1.77565577e-02,
       9.11727426e-01, 9.52124255e-01, 2.14511053e-01, 2.80413007e-01,
       1.24970470e-01, 9.78376509e-02, 5.56955615e-01, 3.87798794e+00,
       2.01826906e-01, 2.44153822e-01, 4.58159506e-01, 5.66211714e-01,
       3.80269438e-01, 2.76070905e-01, 4.50623922e-02, 2.24173215e-01,
       2.17093233e-01, 1.09025115e-01, 8.33700025e-02, 6.97207991e-02,
       3.78710940e-01, 2.06651679e-01, 2.64626849e-01, 1.07643984e-01,
       1.40890184e-01, 4.88115222e-01, 4.72413350e-01, 7.96582517e-01,
       3.58615643e-01, 2.49803652e-01, 1.74042641e-02, 9.86995840e-02,
       2.46128231e-01, 1.10456138e-01, 1.11301651e-01, 6.74527184e-02,
       1.72165408e-01, 2.49028629e-01, 1.81383941e-01, 9.87869028e-02,
       2.26840015e-01, 3.50097309e-02, 2.32794547e-01, 6.39607031e-02,
       1.65256288e-01, 2.74136867e-01, 3.13780651e-01, 1.36837953e-01,
       7.57568786e-02, 6.04513562e-02, 3.47188964e-01, 5.13704573e-01,
       4.86378566e-02, 1.23395420e-01, 1.09264233e-01, 4.58431049e-01,
       1.67957453e-02, 7.15289879e-03, 6.18670450e-02, 3.31229968e-02,
       3.04475567e-02, 2.36933919e-02, 4.51451309e-02, 3.95860692e-02,
       4.04957652e-02, 4.75621894e-02, 2.03357928e-02, 3.73493211e-02,
       6.05343321e-02, 1.74884380e-01, 1.23304314e-01, 7.41641337e-02,
       3.57598444e-02, 1.12884989e-01, 3.55258583e-02, 1.12031698e-01,
       6.97616529e-02, 3.92827534e-02, 2.95686310e-02, 1.03019129e-01,
       1.64373634e-01, 1.02557019e-01, 9.70363370e-02, 7.12580904e-02,
       5.28291384e-01, 8.44967330e-01, 2.62556413e-01, 2.66865324e-01,
       1.59497246e-02, 1.42931528e-02, 1.05519836e+00, 5.63271793e-01,
       3.36049307e-01, 1.57264003e-02, 1.26527110e-02, 3.71480561e-02,
       1.11484201e+00, 6.71452198e-01, 1.07649823e-01, 5.27188114e-02,
       5.25370160e-02, 2.75983817e-02, 4.36817451e-01, 5.45448422e+00,
       3.66649462e-01, 1.55009340e-01, 2.99154291e-01, 2.74087127e-01,
       2.04959653e-01, 2.12748392e-01, 1.21623217e-01, 2.10754693e-01,
       3.10105314e-01, 1.14414743e-01, 6.13341606e-02, 1.08992397e-01,
       1.97915952e-01, 1.68502610e-01, 6.08410940e-02, 1.27856932e-01,
       1.12451662e-01, 4.07017610e-02, 9.85962069e-02, 8.63546346e-02,
       6.16330593e-02, 1.20566823e-01, 2.12204690e-01, 1.62304162e-01,
       3.22145756e-01, 1.66911871e-01, 5.58098426e-02, 6.36994183e-02,
       1.75884681e-01, 4.30887447e-02, 7.65033737e-02, 3.44670659e-01,
       5.20361829e-01, 4.76334595e-02, 1.52323448e-01, 1.31865483e-01,
       2.88651773e-01, 3.93466413e-01, 2.63216604e-01, 3.70829747e-01,
       2.26372297e-01, 1.12041078e-01, 9.96099498e-02, 7.58608239e-02,
       1.92772801e-01, 2.06191406e-01, 7.72443001e-02, 3.70820319e-01,
       9.74622094e-02, 4.30383083e-02, 1.53151504e-01, 6.56948436e-02,
       7.56395694e-02, 3.12442532e-02, 2.81694412e-02, 2.86250097e-02,
       3.15025852e-02, 3.14473891e-02, 5.04081702e-02, 2.47528606e-02,
       4.65932211e-02, 4.80914240e-02, 5.60696392e-02, 2.17994434e-02,
       8.19523027e-02, 3.10072635e-02, 5.13973837e-02, 3.28633195e-02,
       4.97922424e-02, 4.67495206e-02, 4.41192879e-02, 8.43618071e-02,
       5.64616512e-02, 2.44321396e-01, 7.38247352e-02, 6.67321490e-02,
       5.34107323e-01, 1.31329343e+00, 1.17514633e-01, 2.39730298e-01,
       2.47064205e-02, 1.59644270e-02, 7.42300882e-01, 1.53236781e+00,
       3.51491526e-01, 3.24765114e-01, 4.65769563e-02, 1.04293165e-02,
       6.35909369e-01, 1.82769787e+00, 2.11342348e-01, 4.14842604e-01,
       1.87347076e-01, 2.97137518e-02, 6.39192415e-01, 1.90538662e+00,
       1.89884585e-01, 1.14471432e-01, 1.15190060e-01, 8.94733950e-02,
       1.32847726e-01, 3.07157535e-01, 1.37616066e-01, 1.39203395e-01,
       7.97786473e-02, 3.01510215e-01, 3.88025535e-01, 3.48602766e-01,
       1.70865563e-01, 2.31079474e-01, 1.70322186e-01, 1.45357013e-01,
       2.15384713e-01, 1.93506246e-01, 3.30775030e-01, 1.18234260e-01,
       1.31414957e-01, 1.32512977e-01, 1.10609579e-01, 6.56347858e-01,
       1.91839038e-01, 1.04695561e-01, 8.35988150e-02, 1.11212099e-01,
       6.96912539e-02, 1.00937724e-01, 6.83147045e-02, 9.05861862e-02,
       1.35122796e-01, 1.64134225e-01, 1.24601640e-01, 1.18461714e-01,
       6.04456091e-02, 1.33762907e-01, 2.42451957e-01, 3.09490145e-01,
       3.90255395e-01, 2.85638030e-01, 2.35966532e-01, 2.98881055e-01,
       2.65448864e-01, 3.27654132e-01, 2.87349337e-01, 1.12579587e-01,
       2.23046587e-01, 1.53823632e-01, 8.85676387e-02, 1.35283520e-01,
       1.35630450e-01, 9.98685416e-02, 1.04693387e-01, 9.26414293e-02,
       7.27723828e-02, 2.03146159e-01, 1.82553187e-01, 1.43442905e-01,
       8.55776433e-01, 1.13713465e+00, 3.39084746e-01, 1.68715418e-01,
       2.21398768e-01, 1.44789391e-01, 1.24942660e-01, 1.93468372e-01,
       2.41942566e-01, 1.06677626e-01, 8.48953784e-02, 1.07373449e-01,
       1.55189987e-01, 2.77419441e-01, 1.69909843e-01, 3.92601310e-01,
       2.46652313e+00, 2.55093308e+00, 2.17357565e-01, 1.87852329e-01,
       7.49412865e-01, 1.11340305e+00, 2.56663684e+00, 2.88812775e+00,
       1.39047611e-01, 3.51340042e-01, 5.56015651e-01, 1.05175237e-01,
       2.81227958e+00, 2.37331524e+00, 2.78646070e-01, 1.18915579e-01,
       2.23242063e-01, 6.41357557e-02, 6.22037754e-01, 3.34290237e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.06541619e-01, 8.39097446e-02, 9.56189343e-02, 7.05115436e-02,
       5.47404648e-01, 5.47150047e-01, 3.35857105e-01, 2.11880367e-01,
       3.13195213e-01, 1.79775274e-01, 2.57189144e-01, 2.31836557e-01,
       2.08043663e-01, 2.12240753e-01, 2.45339304e-01, 9.25838097e-02,
       2.61317079e-01, 8.22329329e-02, 1.10176296e-01, 6.89512655e-02,
       4.35328729e-02, 6.53760267e-02, 8.49758026e-02, 1.33390857e-01,
       2.17572527e-01, 1.59925404e-01, 7.17767229e-02, 1.64610308e-01,
       3.17375711e+00, 7.66646850e+00, 2.09484475e-01, 2.86513355e-01,
       4.98403981e-01, 3.71466988e-01, 2.41500896e+00, 6.23181541e+00,
       1.24187484e-01, 7.33622862e-02, 2.92730720e-01, 6.59691282e-01,
       2.14317226e+00, 2.40887971e+00, 9.11715031e-02, 5.54354339e-02,
       4.01855208e-01, 1.07043967e-01, 1.44807236e+00, 1.34661443e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       2.85165587e-01, 2.92105924e-01, 1.99904202e-01, 2.44343310e-01,
       7.85051371e-01, 3.68442085e-01, 6.84688134e-01, 5.61885724e-01,
       5.64509108e-01, 3.93055174e-01, 3.08547732e-01, 3.93087532e-01,
       4.01675077e-01, 4.25209687e-01, 3.08561779e-01, 5.64601087e-01,
       5.92742063e-01, 3.59717980e-01, 2.22250761e-01, 1.98610641e-01,
       2.86707003e-01, 2.03832095e-01, 2.27992155e-01, 1.86620169e-01,
       5.61014359e-01, 3.25881302e-01, 3.13735781e-01, 1.29333228e-01,
       3.63683884e+00, 8.39661132e+00, 1.66721847e+00, 3.38030556e+00,
       3.53665954e-01, 3.44997375e+00, 2.85421120e+00, 2.80216019e+00,
       5.94674532e-02, 1.26083835e-01, 6.64271652e-02, 1.06988435e-01,
       2.24803285e+00, 2.71647266e+00, 7.16605188e-02, 4.38007045e-02,
       6.45580998e-02, 1.02192277e-01, 2.24427290e+00, 9.03632242e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00]), 'param_estimator__algorithm': masked_array(data=['auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                   'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__leaf_size': masked_array(data=[15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                   15, 15, 15, 15, 15, 15, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                   30, 30, 30, 30, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                   45, 45],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__metric': masked_array(data=['euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'euclidean',
                   'euclidean', 'euclidean', 'euclidean', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'minkowski',
                   'minkowski', 'minkowski', 'minkowski', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'hamming', 'hamming',
                   'hamming', 'hamming', 'hamming', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard', 'jaccard', 'jaccard', 'jaccard',
                   'jaccard', 'jaccard'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__n_neighbors': masked_array(data=[3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                   3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
                   6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
                   5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3,
                   4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__p': masked_array(data=[1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3,
                   1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__weights': masked_array(data=['uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance',
                   'uniform', 'distance', 'uniform', 'distance'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'auto', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 15, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 30, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'euclidean', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'minkowski', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'hamming', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 3, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 4, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 5, 'estimator__p': 3, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 1, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 2, 'estimator__weights': 'distance'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'uniform'}, {'estimator__algorithm': 'kd_tree', 'estimator__leaf_size': 45, 'estimator__metric': 'jaccard', 'estimator__n_neighbors': 6, 'estimator__p': 3, 'estimator__weights': 'distance'}], 'split0_test_score': array([0.62552381, 0.62552381, 0.62552381, 0.62552381, 0.62552381,
       0.62552381, 0.61735785, 0.63918306, 0.61735785, 0.63918306,
       0.61735785, 0.63918306, 0.65704253, 0.65704253, 0.65704253,
       0.65704253, 0.65704253, 0.65704253, 0.63373797, 0.65129007,
       0.63373797, 0.65129007, 0.63373797, 0.65129007, 0.63386728,
       0.63386728, 0.62552381, 0.62552381, 0.62742119, 0.62742119,
       0.62409536, 0.64212524, 0.61735785, 0.63918306, 0.60717336,
       0.63125948, 0.65833659, 0.65833659, 0.65704253, 0.65704253,
       0.65282132, 0.65282132, 0.6432455 , 0.65566038, 0.63373797,
       0.65129007, 0.63157895, 0.65023474, 0.34357849, 0.34357849,
       0.34357849, 0.34357849, 0.34357849, 0.34357849, 0.62589625,
       0.62542088, 0.62589625, 0.62542088, 0.62589625, 0.62542088,
       0.62852335, 0.62852335, 0.62852335, 0.62852335, 0.62852335,
       0.62852335, 0.62794613, 0.62794613, 0.62794613, 0.62794613,
       0.62794613, 0.62794613, 0.33902036, 0.33902036, 0.33902036,
       0.33902036, 0.33902036, 0.33902036, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62552381, 0.62552381, 0.62552381, 0.62552381,
       0.62552381, 0.62552381, 0.61735785, 0.63918306, 0.61735785,
       0.63918306, 0.61735785, 0.63918306, 0.65704253, 0.65704253,
       0.65704253, 0.65704253, 0.65704253, 0.65704253, 0.63373797,
       0.65129007, 0.63373797, 0.65129007, 0.63373797, 0.65129007,
       0.63386728, 0.63386728, 0.62552381, 0.62552381, 0.62742119,
       0.62742119, 0.62409536, 0.64212524, 0.61735785, 0.63918306,
       0.60717336, 0.63125948, 0.65833659, 0.65833659, 0.65704253,
       0.65704253, 0.65282132, 0.65282132, 0.6432455 , 0.65566038,
       0.63373797, 0.65129007, 0.63157895, 0.65023474, 0.34357849,
       0.34357849, 0.34357849, 0.34357849, 0.34357849, 0.34357849,
       0.62589625, 0.62542088, 0.62589625, 0.62542088, 0.62589625,
       0.62542088, 0.62852335, 0.62852335, 0.62852335, 0.62852335,
       0.62852335, 0.62852335, 0.62794613, 0.62794613, 0.62794613,
       0.62794613, 0.62794613, 0.62794613, 0.33902036, 0.33902036,
       0.33902036, 0.33902036, 0.33902036, 0.33902036, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62552381, 0.62552381, 0.62552381,
       0.62552381, 0.62552381, 0.62552381, 0.61735785, 0.63918306,
       0.61735785, 0.63918306, 0.61735785, 0.63918306, 0.65704253,
       0.65704253, 0.65704253, 0.65704253, 0.65704253, 0.65704253,
       0.63373797, 0.65129007, 0.63373797, 0.65129007, 0.63373797,
       0.65129007, 0.63386728, 0.63386728, 0.62552381, 0.62552381,
       0.62742119, 0.62742119, 0.62409536, 0.64212524, 0.61735785,
       0.63918306, 0.60717336, 0.63125948, 0.65833659, 0.65833659,
       0.65704253, 0.65704253, 0.65282132, 0.65282132, 0.6432455 ,
       0.65566038, 0.63373797, 0.65129007, 0.63157895, 0.65023474,
       0.34357849, 0.34357849, 0.34357849, 0.34357849, 0.34357849,
       0.34357849, 0.62589625, 0.62542088, 0.62589625, 0.62542088,
       0.62589625, 0.62542088, 0.62852335, 0.62852335, 0.62852335,
       0.62852335, 0.62852335, 0.62852335, 0.62794613, 0.62794613,
       0.62794613, 0.62794613, 0.62794613, 0.62794613, 0.33902036,
       0.33902036, 0.33902036, 0.33902036, 0.33902036, 0.33902036,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62736842, 0.62736842,
       0.62736842, 0.62736842, 0.62736842, 0.62552381, 0.62552381,
       0.62552381, 0.62552381, 0.62552381, 0.62552381, 0.61735785,
       0.63918306, 0.61735785, 0.63918306, 0.61735785, 0.63918306,
       0.65704253, 0.65704253, 0.65704253, 0.65704253, 0.65704253,
       0.65704253, 0.63373797, 0.65129007, 0.63373797, 0.65129007,
       0.63373797, 0.65129007, 0.63386728, 0.63386728, 0.62552381,
       0.62552381, 0.62742119, 0.62742119, 0.62409536, 0.64212524,
       0.61735785, 0.63918306, 0.60717336, 0.63125948, 0.65833659,
       0.65833659, 0.65704253, 0.65704253, 0.65282132, 0.65282132,
       0.6432455 , 0.65566038, 0.63373797, 0.65129007, 0.63157895,
       0.65023474,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.62552381,
       0.62552381, 0.62552381, 0.62552381, 0.62552381, 0.62552381,
       0.61735785, 0.63918306, 0.61735785, 0.63918306, 0.61735785,
       0.63918306, 0.65704253, 0.65704253, 0.65704253, 0.65704253,
       0.65704253, 0.65704253, 0.63373797, 0.65129007, 0.63373797,
       0.65129007, 0.63373797, 0.65129007, 0.63386728, 0.63386728,
       0.62552381, 0.62552381, 0.62742119, 0.62742119, 0.62409536,
       0.64212524, 0.61735785, 0.63918306, 0.60717336, 0.63125948,
       0.65833659, 0.65833659, 0.65704253, 0.65704253, 0.65282132,
       0.65282132, 0.6432455 , 0.65566038, 0.63373797, 0.65129007,
       0.63157895, 0.65023474,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.62552381, 0.62552381, 0.62552381, 0.62552381, 0.62552381,
       0.62552381, 0.61735785, 0.63918306, 0.61735785, 0.63918306,
       0.61735785, 0.63918306, 0.65704253, 0.65704253, 0.65704253,
       0.65704253, 0.65704253, 0.65704253, 0.63373797, 0.65129007,
       0.63373797, 0.65129007, 0.63373797, 0.65129007, 0.63386728,
       0.63386728, 0.62552381, 0.62552381, 0.62742119, 0.62742119,
       0.62409536, 0.64212524, 0.61735785, 0.63918306, 0.60717336,
       0.63125948, 0.65833659, 0.65833659, 0.65704253, 0.65704253,
       0.65282132, 0.65282132, 0.6432455 , 0.65566038, 0.63373797,
       0.65129007, 0.63157895, 0.65023474,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'split1_test_score': array([0.62677407, 0.62677407, 0.62677407, 0.62677407, 0.62677407,
       0.62677407, 0.62639246, 0.62785388, 0.62639246, 0.62785388,
       0.62639246, 0.62785388, 0.65481833, 0.65481833, 0.65481833,
       0.65481833, 0.65481833, 0.65481833, 0.63835156, 0.64643279,
       0.63835156, 0.64643279, 0.63835156, 0.64643279, 0.62480858,
       0.62480858, 0.62677407, 0.62677407, 0.62380406, 0.62380406,
       0.62542662, 0.62347561, 0.62639246, 0.62785388, 0.62243151,
       0.62746586, 0.65668112, 0.65668112, 0.65481833, 0.65481833,
       0.65013774, 0.65013774, 0.64219409, 0.6501182 , 0.63835156,
       0.64643279, 0.63498738, 0.64858491, 0.44804866, 0.44804866,
       0.44804866, 0.44804866, 0.44804866, 0.44804866, 0.61003861,
       0.60992301, 0.61003861, 0.60992301, 0.61003861, 0.60992301,
       0.61222745, 0.61222745, 0.61222745, 0.61222745, 0.61222745,
       0.61222745, 0.61294471, 0.61222745, 0.61294471, 0.61222745,
       0.61294471, 0.61222745, 0.44467109, 0.44467109, 0.44467109,
       0.44467109, 0.44467109, 0.44467109, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.62677407, 0.62677407, 0.62677407, 0.62677407,
       0.62677407, 0.62677407, 0.62639246, 0.62785388, 0.62639246,
       0.62785388, 0.62639246, 0.62785388, 0.65481833, 0.65481833,
       0.65481833, 0.65481833, 0.65481833, 0.65481833, 0.63835156,
       0.64643279, 0.63835156, 0.64643279, 0.63835156, 0.64643279,
       0.62480858, 0.62480858, 0.62677407, 0.62677407, 0.62380406,
       0.62380406, 0.62542662, 0.62347561, 0.62639246, 0.62785388,
       0.62243151, 0.62746586, 0.65668112, 0.65668112, 0.65481833,
       0.65481833, 0.65013774, 0.65013774, 0.64219409, 0.6501182 ,
       0.63835156, 0.64643279, 0.63498738, 0.64858491, 0.44804866,
       0.44804866, 0.44804866, 0.44804866, 0.44804866, 0.44804866,
       0.61003861, 0.60992301, 0.61003861, 0.60992301, 0.61003861,
       0.60992301, 0.61222745, 0.61222745, 0.61222745, 0.61222745,
       0.61222745, 0.61222745, 0.61294471, 0.61222745, 0.61294471,
       0.61222745, 0.61294471, 0.61222745, 0.44467109, 0.44467109,
       0.44467109, 0.44467109, 0.44467109, 0.44467109, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.62677407, 0.62677407, 0.62677407,
       0.62677407, 0.62677407, 0.62677407, 0.62639246, 0.62785388,
       0.62639246, 0.62785388, 0.62639246, 0.62785388, 0.65481833,
       0.65481833, 0.65481833, 0.65481833, 0.65481833, 0.65481833,
       0.63835156, 0.64643279, 0.63835156, 0.64643279, 0.63835156,
       0.64643279, 0.62480858, 0.62480858, 0.62677407, 0.62677407,
       0.62380406, 0.62380406, 0.62542662, 0.62347561, 0.62639246,
       0.62785388, 0.62243151, 0.62746586, 0.65668112, 0.65668112,
       0.65481833, 0.65481833, 0.65013774, 0.65013774, 0.64219409,
       0.6501182 , 0.63835156, 0.64643279, 0.63498738, 0.64858491,
       0.44804866, 0.44804866, 0.44804866, 0.44804866, 0.44804866,
       0.44804866, 0.61003861, 0.60992301, 0.61003861, 0.60992301,
       0.61003861, 0.60992301, 0.61222745, 0.61222745, 0.61222745,
       0.61222745, 0.61222745, 0.61222745, 0.61294471, 0.61222745,
       0.61294471, 0.61222745, 0.61294471, 0.61222745, 0.44467109,
       0.44467109, 0.44467109, 0.44467109, 0.44467109, 0.44467109,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.61294471, 0.61294471,
       0.61294471, 0.61294471, 0.61294471, 0.62677407, 0.62677407,
       0.62677407, 0.62677407, 0.62677407, 0.62677407, 0.62639246,
       0.62785388, 0.62639246, 0.62785388, 0.62639246, 0.62785388,
       0.65481833, 0.65481833, 0.65481833, 0.65481833, 0.65481833,
       0.65481833, 0.63835156, 0.64643279, 0.63835156, 0.64643279,
       0.63835156, 0.64643279, 0.62480858, 0.62480858, 0.62677407,
       0.62677407, 0.62380406, 0.62380406, 0.62542662, 0.62347561,
       0.62639246, 0.62785388, 0.62243151, 0.62746586, 0.65668112,
       0.65668112, 0.65481833, 0.65481833, 0.65013774, 0.65013774,
       0.64219409, 0.6501182 , 0.63835156, 0.64643279, 0.63498738,
       0.64858491,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.62677407,
       0.62677407, 0.62677407, 0.62677407, 0.62677407, 0.62677407,
       0.62639246, 0.62785388, 0.62639246, 0.62785388, 0.62639246,
       0.62785388, 0.65481833, 0.65481833, 0.65481833, 0.65481833,
       0.65481833, 0.65481833, 0.63835156, 0.64643279, 0.63835156,
       0.64643279, 0.63835156, 0.64643279, 0.62480858, 0.62480858,
       0.62677407, 0.62677407, 0.62380406, 0.62380406, 0.62542662,
       0.62347561, 0.62639246, 0.62785388, 0.62243151, 0.62746586,
       0.65668112, 0.65668112, 0.65481833, 0.65481833, 0.65013774,
       0.65013774, 0.64219409, 0.6501182 , 0.63835156, 0.64643279,
       0.63498738, 0.64858491,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.62677407, 0.62677407, 0.62677407, 0.62677407, 0.62677407,
       0.62677407, 0.62639246, 0.62785388, 0.62639246, 0.62785388,
       0.62639246, 0.62785388, 0.65481833, 0.65481833, 0.65481833,
       0.65481833, 0.65481833, 0.65481833, 0.63835156, 0.64643279,
       0.63835156, 0.64643279, 0.63835156, 0.64643279, 0.62480858,
       0.62480858, 0.62677407, 0.62677407, 0.62380406, 0.62380406,
       0.62542662, 0.62347561, 0.62639246, 0.62785388, 0.62243151,
       0.62746586, 0.65668112, 0.65668112, 0.65481833, 0.65481833,
       0.65013774, 0.65013774, 0.64219409, 0.6501182 , 0.63835156,
       0.64643279, 0.63498738, 0.64858491,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'split2_test_score': array([0.64009026, 0.64009026, 0.64009026, 0.64009026, 0.64009026,
       0.64009026, 0.62677824, 0.64065403, 0.62677824, 0.64065403,
       0.62677824, 0.64065403, 0.65479876, 0.65479876, 0.65479876,
       0.65479876, 0.65479876, 0.65479876, 0.64297521, 0.65137971,
       0.64297521, 0.65137971, 0.64297521, 0.65137971, 0.63915979,
       0.63915979, 0.64009026, 0.64009026, 0.63378176, 0.63378176,
       0.6230608 , 0.63612663, 0.62677824, 0.64065403, 0.62807164,
       0.6418743 , 0.65073246, 0.65073246, 0.65479876, 0.65479876,
       0.64824903, 0.64824903, 0.64433416, 0.64810518, 0.64297521,
       0.65137971, 0.64208782, 0.64829193, 0.42843137, 0.42843137,
       0.42843137, 0.42843137, 0.42843137, 0.42843137, 0.60284281,
       0.60191747, 0.60284281, 0.60191747, 0.60284281, 0.60191747,
       0.60233918, 0.60233918, 0.60233918, 0.60233918, 0.60233918,
       0.60233918, 0.60284281, 0.60383653, 0.60284281, 0.60383653,
       0.60284281, 0.60383653, 0.42199108, 0.42199108, 0.42199108,
       0.42199108, 0.42199108, 0.42199108, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.64009026, 0.64009026, 0.64009026, 0.64009026,
       0.64009026, 0.64009026, 0.62677824, 0.64065403, 0.62677824,
       0.64065403, 0.62677824, 0.64065403, 0.65479876, 0.65479876,
       0.65479876, 0.65479876, 0.65479876, 0.65479876, 0.64297521,
       0.65137971, 0.64297521, 0.65137971, 0.64297521, 0.65137971,
       0.63915979, 0.63915979, 0.64009026, 0.64009026, 0.63378176,
       0.63378176, 0.6230608 , 0.63612663, 0.62677824, 0.64065403,
       0.62807164, 0.6418743 , 0.65073246, 0.65073246, 0.65479876,
       0.65479876, 0.64824903, 0.64824903, 0.64433416, 0.64810518,
       0.64297521, 0.65137971, 0.64208782, 0.64829193, 0.42843137,
       0.42843137, 0.42843137, 0.42843137, 0.42843137, 0.42843137,
       0.60284281, 0.60191747, 0.60284281, 0.60191747, 0.60284281,
       0.60191747, 0.60233918, 0.60233918, 0.60233918, 0.60233918,
       0.60233918, 0.60233918, 0.60284281, 0.60383653, 0.60284281,
       0.60383653, 0.60284281, 0.60383653, 0.42199108, 0.42199108,
       0.42199108, 0.42199108, 0.42199108, 0.42199108, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.64009026, 0.64009026, 0.64009026,
       0.64009026, 0.64009026, 0.64009026, 0.62677824, 0.64065403,
       0.62677824, 0.64065403, 0.62677824, 0.64065403, 0.65479876,
       0.65479876, 0.65479876, 0.65479876, 0.65479876, 0.65479876,
       0.64297521, 0.65137971, 0.64297521, 0.65137971, 0.64297521,
       0.65137971, 0.63915979, 0.63915979, 0.64009026, 0.64009026,
       0.63378176, 0.63378176, 0.6230608 , 0.63612663, 0.62677824,
       0.64065403, 0.62807164, 0.6418743 , 0.65073246, 0.65073246,
       0.65479876, 0.65479876, 0.64824903, 0.64824903, 0.64433416,
       0.64810518, 0.64297521, 0.65137971, 0.64208782, 0.64829193,
       0.42843137, 0.42843137, 0.42843137, 0.42843137, 0.42843137,
       0.42843137, 0.60284281, 0.60191747, 0.60284281, 0.60191747,
       0.60284281, 0.60191747, 0.60233918, 0.60233918, 0.60233918,
       0.60233918, 0.60233918, 0.60233918, 0.60284281, 0.60383653,
       0.60284281, 0.60383653, 0.60284281, 0.60383653, 0.42199108,
       0.42199108, 0.42199108, 0.42199108, 0.42199108, 0.42199108,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.60309494, 0.60309494,
       0.60309494, 0.60309494, 0.60309494, 0.64009026, 0.64009026,
       0.64009026, 0.64009026, 0.64009026, 0.64009026, 0.62677824,
       0.64065403, 0.62677824, 0.64065403, 0.62677824, 0.64065403,
       0.65479876, 0.65479876, 0.65479876, 0.65479876, 0.65479876,
       0.65479876, 0.64297521, 0.65137971, 0.64297521, 0.65137971,
       0.64297521, 0.65137971, 0.63915979, 0.63915979, 0.64009026,
       0.64009026, 0.63378176, 0.63378176, 0.6230608 , 0.63612663,
       0.62677824, 0.64065403, 0.62807164, 0.6418743 , 0.65073246,
       0.65073246, 0.65479876, 0.65479876, 0.64824903, 0.64824903,
       0.64433416, 0.64810518, 0.64297521, 0.65137971, 0.64208782,
       0.64829193,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.64009026,
       0.64009026, 0.64009026, 0.64009026, 0.64009026, 0.64009026,
       0.62677824, 0.64065403, 0.62677824, 0.64065403, 0.62677824,
       0.64065403, 0.65479876, 0.65479876, 0.65479876, 0.65479876,
       0.65479876, 0.65479876, 0.64297521, 0.65137971, 0.64297521,
       0.65137971, 0.64297521, 0.65137971, 0.63915979, 0.63915979,
       0.64009026, 0.64009026, 0.63378176, 0.63378176, 0.6230608 ,
       0.63612663, 0.62677824, 0.64065403, 0.62807164, 0.6418743 ,
       0.65073246, 0.65073246, 0.65479876, 0.65479876, 0.64824903,
       0.64824903, 0.64433416, 0.64810518, 0.64297521, 0.65137971,
       0.64208782, 0.64829193,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.64009026, 0.64009026, 0.64009026, 0.64009026, 0.64009026,
       0.64009026, 0.62677824, 0.64065403, 0.62677824, 0.64065403,
       0.62677824, 0.64065403, 0.65479876, 0.65479876, 0.65479876,
       0.65479876, 0.65479876, 0.65479876, 0.64297521, 0.65137971,
       0.64297521, 0.65137971, 0.64297521, 0.65137971, 0.63915979,
       0.63915979, 0.64009026, 0.64009026, 0.63378176, 0.63378176,
       0.6230608 , 0.63612663, 0.62677824, 0.64065403, 0.62807164,
       0.6418743 , 0.65073246, 0.65073246, 0.65479876, 0.65479876,
       0.64824903, 0.64824903, 0.64433416, 0.64810518, 0.64297521,
       0.65137971, 0.64208782, 0.64829193,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'split3_test_score': array([0.61911658, 0.61911658, 0.61911658, 0.61911658, 0.61911658,
       0.61911658, 0.61138211, 0.61897915, 0.61138211, 0.61897915,
       0.61138211, 0.61897915, 0.63564132, 0.63564132, 0.63564132,
       0.63564132, 0.63564132, 0.63564132, 0.62224039, 0.63376036,
       0.62224039, 0.63376036, 0.62224039, 0.63376036, 0.61921965,
       0.61921965, 0.61911658, 0.61911658, 0.62309368, 0.62309368,
       0.60368098, 0.6199422 , 0.61138211, 0.61897915, 0.61444805,
       0.61973875, 0.63213611, 0.63213611, 0.63564132, 0.63564132,
       0.6381205 , 0.6381205 , 0.61696026, 0.63289225, 0.62224039,
       0.63376036, 0.63098135, 0.6370147 , 0.44313725, 0.44313725,
       0.44313725, 0.44313725, 0.44313725, 0.44313725, 0.36432432,
       0.36481382, 0.36432432, 0.36481382, 0.36432432, 0.36481382,
       0.43996063, 0.43996063, 0.43996063, 0.43996063, 0.43996063,
       0.43996063, 0.36294691, 0.3650108 , 0.36294691, 0.3650108 ,
       0.36294691, 0.3650108 , 0.43786982, 0.43786982, 0.43786982,
       0.43786982, 0.43786982, 0.43786982, 0.36028215, 0.36028215,
       0.36028215, 0.36028215, 0.36028215, 0.36028215, 0.43688363,
       0.43688363, 0.43688363, 0.43688363, 0.43688363, 0.43688363,
       0.36028215, 0.36028215, 0.36028215, 0.36028215, 0.36028215,
       0.36028215, 0.61911658, 0.61911658, 0.61911658, 0.61911658,
       0.61911658, 0.61911658, 0.61138211, 0.61897915, 0.61138211,
       0.61897915, 0.61138211, 0.61897915, 0.63564132, 0.63564132,
       0.63564132, 0.63564132, 0.63564132, 0.63564132, 0.62224039,
       0.63376036, 0.62224039, 0.63376036, 0.62224039, 0.63376036,
       0.61921965, 0.61921965, 0.61911658, 0.61911658, 0.62309368,
       0.62309368, 0.60368098, 0.6199422 , 0.61138211, 0.61897915,
       0.61444805, 0.61973875, 0.63213611, 0.63213611, 0.63564132,
       0.63564132, 0.6381205 , 0.6381205 , 0.61696026, 0.63289225,
       0.62224039, 0.63376036, 0.63098135, 0.6370147 , 0.44313725,
       0.44313725, 0.44313725, 0.44313725, 0.44313725, 0.44313725,
       0.36432432, 0.36481382, 0.36432432, 0.36481382, 0.36432432,
       0.36481382, 0.43996063, 0.43996063, 0.43996063, 0.43996063,
       0.43996063, 0.43996063, 0.36294691, 0.3650108 , 0.36294691,
       0.3650108 , 0.36294691, 0.3650108 , 0.43786982, 0.43786982,
       0.43786982, 0.43786982, 0.43786982, 0.43786982, 0.36028215,
       0.36028215, 0.36028215, 0.36028215, 0.36028215, 0.36028215,
       0.43688363, 0.43688363, 0.43688363, 0.43688363, 0.43688363,
       0.43688363, 0.36028215, 0.36028215, 0.36028215, 0.36028215,
       0.36028215, 0.36028215, 0.61911658, 0.61911658, 0.61911658,
       0.61911658, 0.61911658, 0.61911658, 0.61138211, 0.61897915,
       0.61138211, 0.61897915, 0.61138211, 0.61897915, 0.63564132,
       0.63564132, 0.63564132, 0.63564132, 0.63564132, 0.63564132,
       0.62224039, 0.63376036, 0.62224039, 0.63376036, 0.62224039,
       0.63376036, 0.61921965, 0.61921965, 0.61911658, 0.61911658,
       0.62309368, 0.62309368, 0.60368098, 0.6199422 , 0.61138211,
       0.61897915, 0.61444805, 0.61973875, 0.63213611, 0.63213611,
       0.63564132, 0.63564132, 0.6381205 , 0.6381205 , 0.61696026,
       0.63289225, 0.62224039, 0.63376036, 0.63098135, 0.6370147 ,
       0.44313725, 0.44313725, 0.44313725, 0.44313725, 0.44313725,
       0.44313725, 0.36432432, 0.36481382, 0.36432432, 0.36481382,
       0.36432432, 0.36481382, 0.43996063, 0.43996063, 0.43996063,
       0.43996063, 0.43996063, 0.43996063, 0.36294691, 0.3650108 ,
       0.36294691, 0.3650108 , 0.36294691, 0.3650108 , 0.43786982,
       0.43786982, 0.43786982, 0.43786982, 0.43786982, 0.43786982,
       0.36028215, 0.36028215, 0.36028215, 0.36028215, 0.36028215,
       0.36028215, 0.43688363, 0.43688363, 0.43688363, 0.43688363,
       0.43688363, 0.43688363, 0.36028215, 0.36028215, 0.36028215,
       0.36028215, 0.36028215, 0.36028215, 0.61911658, 0.61911658,
       0.61911658, 0.61911658, 0.61911658, 0.61911658, 0.61138211,
       0.61897915, 0.61138211, 0.61897915, 0.61138211, 0.61897915,
       0.63564132, 0.63564132, 0.63564132, 0.63564132, 0.63564132,
       0.63564132, 0.62224039, 0.63376036, 0.62224039, 0.63376036,
       0.62224039, 0.63376036, 0.61921965, 0.61921965, 0.61911658,
       0.61911658, 0.62309368, 0.62309368, 0.60368098, 0.6199422 ,
       0.61138211, 0.61897915, 0.61444805, 0.61973875, 0.63213611,
       0.63213611, 0.63564132, 0.63564132, 0.6381205 , 0.6381205 ,
       0.61696026, 0.63289225, 0.62224039, 0.63376036, 0.63098135,
       0.6370147 ,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.61911658,
       0.61911658, 0.61911658, 0.61911658, 0.61911658, 0.61911658,
       0.61138211, 0.61897915, 0.61138211, 0.61897915, 0.61138211,
       0.61897915, 0.63564132, 0.63564132, 0.63564132, 0.63564132,
       0.63564132, 0.63564132, 0.62224039, 0.63376036, 0.62224039,
       0.63376036, 0.62224039, 0.63376036, 0.61921965, 0.61921965,
       0.61911658, 0.61911658, 0.62309368, 0.62309368, 0.60368098,
       0.6199422 , 0.61138211, 0.61897915, 0.61444805, 0.61973875,
       0.63213611, 0.63213611, 0.63564132, 0.63564132, 0.6381205 ,
       0.6381205 , 0.61696026, 0.63289225, 0.62224039, 0.63376036,
       0.63098135, 0.6370147 ,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.61911658, 0.61911658, 0.61911658, 0.61911658, 0.61911658,
       0.61911658, 0.61138211, 0.61897915, 0.61138211, 0.61897915,
       0.61138211, 0.61897915, 0.63564132, 0.63564132, 0.63564132,
       0.63564132, 0.63564132, 0.63564132, 0.62224039, 0.63376036,
       0.62224039, 0.63376036, 0.62224039, 0.63376036, 0.61921965,
       0.61921965, 0.61911658, 0.61911658, 0.62309368, 0.62309368,
       0.60368098, 0.6199422 , 0.61138211, 0.61897915, 0.61444805,
       0.61973875, 0.63213611, 0.63213611, 0.63564132, 0.63564132,
       0.6381205 , 0.6381205 , 0.61696026, 0.63289225, 0.62224039,
       0.63376036, 0.63098135, 0.6370147 ,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'split4_test_score': array([0.64386165, 0.64386165, 0.64386165, 0.64386165, 0.64386165,
       0.64386165, 0.62367416, 0.63702568, 0.62367416, 0.63702568,
       0.62367416, 0.63702568, 0.65248227, 0.65248227, 0.65248227,
       0.65248227, 0.65248227, 0.65248227, 0.64748201, 0.65164096,
       0.64748201, 0.65164096, 0.64748201, 0.65164096, 0.64115195,
       0.64115195, 0.64386165, 0.64386165, 0.63750475, 0.63750475,
       0.62711864, 0.64018335, 0.62367416, 0.63702568, 0.62435678,
       0.63598005, 0.65333333, 0.65333333, 0.65248227, 0.65248227,
       0.65066876, 0.65066876, 0.64339781, 0.65643447, 0.64748201,
       0.65164096, 0.64240372, 0.64828673, 0.42784553, 0.42784553,
       0.42784553, 0.42784553, 0.42784553, 0.42784553, 0.37907762,
       0.38073908, 0.37907762, 0.38073908, 0.37907762, 0.38073908,
       0.45496183, 0.45496183, 0.45496183, 0.45496183, 0.45496183,
       0.45496183, 0.37746479, 0.38116592, 0.37746479, 0.38116592,
       0.37746479, 0.38116592, 0.42572741, 0.42572741, 0.42572741,
       0.42572741, 0.42572741, 0.42572741, 0.37880496, 0.37880496,
       0.37880496, 0.37880496, 0.37880496, 0.37880496, 0.45227157,
       0.45227157, 0.45227157, 0.45227157, 0.45227157, 0.45227157,
       0.37880496, 0.37880496, 0.37880496, 0.37880496, 0.37880496,
       0.37880496, 0.64386165, 0.64386165, 0.64386165, 0.64386165,
       0.64386165, 0.64386165, 0.62367416, 0.63702568, 0.62367416,
       0.63702568, 0.62367416, 0.63702568, 0.65248227, 0.65248227,
       0.65248227, 0.65248227, 0.65248227, 0.65248227, 0.64748201,
       0.65164096, 0.64748201, 0.65164096, 0.64748201, 0.65164096,
       0.64115195, 0.64115195, 0.64386165, 0.64386165, 0.63750475,
       0.63750475, 0.62711864, 0.64018335, 0.62367416, 0.63702568,
       0.62435678, 0.63598005, 0.65333333, 0.65333333, 0.65248227,
       0.65248227, 0.65066876, 0.65066876, 0.64339781, 0.65643447,
       0.64748201, 0.65164096, 0.64240372, 0.64828673, 0.42784553,
       0.42784553, 0.42784553, 0.42784553, 0.42784553, 0.42784553,
       0.37907762, 0.38073908, 0.37907762, 0.38073908, 0.37907762,
       0.38073908, 0.45496183, 0.45496183, 0.45496183, 0.45496183,
       0.45496183, 0.45496183, 0.37746479, 0.38116592, 0.37746479,
       0.38116592, 0.37746479, 0.38116592, 0.42572741, 0.42572741,
       0.42572741, 0.42572741, 0.42572741, 0.42572741, 0.37880496,
       0.37880496, 0.37880496, 0.37880496, 0.37880496, 0.37880496,
       0.45227157, 0.45227157, 0.45227157, 0.45227157, 0.45227157,
       0.45227157, 0.37880496, 0.37880496, 0.37880496, 0.37880496,
       0.37880496, 0.37880496, 0.64386165, 0.64386165, 0.64386165,
       0.64386165, 0.64386165, 0.64386165, 0.62367416, 0.63702568,
       0.62367416, 0.63702568, 0.62367416, 0.63702568, 0.65248227,
       0.65248227, 0.65248227, 0.65248227, 0.65248227, 0.65248227,
       0.64748201, 0.65164096, 0.64748201, 0.65164096, 0.64748201,
       0.65164096, 0.64115195, 0.64115195, 0.64386165, 0.64386165,
       0.63750475, 0.63750475, 0.62711864, 0.64018335, 0.62367416,
       0.63702568, 0.62435678, 0.63598005, 0.65333333, 0.65333333,
       0.65248227, 0.65248227, 0.65066876, 0.65066876, 0.64339781,
       0.65643447, 0.64748201, 0.65164096, 0.64240372, 0.64828673,
       0.42784553, 0.42784553, 0.42784553, 0.42784553, 0.42784553,
       0.42784553, 0.37907762, 0.38073908, 0.37907762, 0.38073908,
       0.37907762, 0.38073908, 0.45496183, 0.45496183, 0.45496183,
       0.45496183, 0.45496183, 0.45496183, 0.37746479, 0.38116592,
       0.37746479, 0.38116592, 0.37746479, 0.38116592, 0.42572741,
       0.42572741, 0.42572741, 0.42572741, 0.42572741, 0.42572741,
       0.37880496, 0.37880496, 0.37880496, 0.37880496, 0.37880496,
       0.37880496, 0.45227157, 0.45227157, 0.45227157, 0.45227157,
       0.45227157, 0.45227157, 0.37880496, 0.37880496, 0.37880496,
       0.37880496, 0.37880496, 0.37880496, 0.64386165, 0.64386165,
       0.64386165, 0.64386165, 0.64386165, 0.64386165, 0.62367416,
       0.63702568, 0.62367416, 0.63702568, 0.62367416, 0.63702568,
       0.65248227, 0.65248227, 0.65248227, 0.65248227, 0.65248227,
       0.65248227, 0.64748201, 0.65164096, 0.64748201, 0.65164096,
       0.64748201, 0.65164096, 0.64115195, 0.64115195, 0.64386165,
       0.64386165, 0.63750475, 0.63750475, 0.62711864, 0.64018335,
       0.62367416, 0.63702568, 0.62435678, 0.63598005, 0.65333333,
       0.65333333, 0.65248227, 0.65248227, 0.65066876, 0.65066876,
       0.64339781, 0.65643447, 0.64748201, 0.65164096, 0.64240372,
       0.64828673,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.64386165,
       0.64386165, 0.64386165, 0.64386165, 0.64386165, 0.64386165,
       0.62367416, 0.63702568, 0.62367416, 0.63702568, 0.62367416,
       0.63702568, 0.65248227, 0.65248227, 0.65248227, 0.65248227,
       0.65248227, 0.65248227, 0.64748201, 0.65164096, 0.64748201,
       0.65164096, 0.64748201, 0.65164096, 0.64115195, 0.64115195,
       0.64386165, 0.64386165, 0.63750475, 0.63750475, 0.62711864,
       0.64018335, 0.62367416, 0.63702568, 0.62435678, 0.63598005,
       0.65333333, 0.65333333, 0.65248227, 0.65248227, 0.65066876,
       0.65066876, 0.64339781, 0.65643447, 0.64748201, 0.65164096,
       0.64240372, 0.64828673,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.64386165, 0.64386165, 0.64386165, 0.64386165, 0.64386165,
       0.64386165, 0.62367416, 0.63702568, 0.62367416, 0.63702568,
       0.62367416, 0.63702568, 0.65248227, 0.65248227, 0.65248227,
       0.65248227, 0.65248227, 0.65248227, 0.64748201, 0.65164096,
       0.64748201, 0.65164096, 0.64748201, 0.65164096, 0.64115195,
       0.64115195, 0.64386165, 0.64386165, 0.63750475, 0.63750475,
       0.62711864, 0.64018335, 0.62367416, 0.63702568, 0.62435678,
       0.63598005, 0.65333333, 0.65333333, 0.65248227, 0.65248227,
       0.65066876, 0.65066876, 0.64339781, 0.65643447, 0.64748201,
       0.65164096, 0.64240372, 0.64828673,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'mean_test_score': array([0.63107327, 0.63107327, 0.63107327, 0.63107327, 0.63107327,
       0.63107327, 0.62111696, 0.63273916, 0.62111696, 0.63273916,
       0.62111696, 0.63273916, 0.65095664, 0.65095664, 0.65095664,
       0.65095664, 0.65095664, 0.65095664, 0.63695743, 0.64690078,
       0.63695743, 0.64690078, 0.63695743, 0.64690078, 0.63164145,
       0.63164145, 0.63107327, 0.63107327, 0.62912109, 0.62912109,
       0.62067648, 0.6323706 , 0.62111696, 0.63273916, 0.61929627,
       0.63126369, 0.65024392, 0.65024392, 0.65095664, 0.65095664,
       0.64799947, 0.64799947, 0.63802637, 0.6486421 , 0.63695743,
       0.64690078, 0.63640784, 0.6464826 , 0.41820826, 0.41820826,
       0.41820826, 0.41820826, 0.41820826, 0.41820826, 0.51643592,
       0.51656285, 0.51643592, 0.51656285, 0.51643592, 0.51656285,
       0.54760249, 0.54760249, 0.54760249, 0.54760249, 0.54760249,
       0.54760249, 0.51682907, 0.51803736, 0.51682907, 0.51803736,
       0.51682907, 0.51803736, 0.41385595, 0.41385595, 0.41385595,
       0.41385595, 0.41385595, 0.41385595, 0.51649904, 0.51649904,
       0.51649904, 0.51649904, 0.51649904, 0.51649904, 0.54651265,
       0.54651265, 0.54651265, 0.54651265, 0.54651265, 0.54651265,
       0.51649904, 0.51649904, 0.51649904, 0.51649904, 0.51649904,
       0.51649904, 0.63107327, 0.63107327, 0.63107327, 0.63107327,
       0.63107327, 0.63107327, 0.62111696, 0.63273916, 0.62111696,
       0.63273916, 0.62111696, 0.63273916, 0.65095664, 0.65095664,
       0.65095664, 0.65095664, 0.65095664, 0.65095664, 0.63695743,
       0.64690078, 0.63695743, 0.64690078, 0.63695743, 0.64690078,
       0.63164145, 0.63164145, 0.63107327, 0.63107327, 0.62912109,
       0.62912109, 0.62067648, 0.6323706 , 0.62111696, 0.63273916,
       0.61929627, 0.63126369, 0.65024392, 0.65024392, 0.65095664,
       0.65095664, 0.64799947, 0.64799947, 0.63802637, 0.6486421 ,
       0.63695743, 0.64690078, 0.63640784, 0.6464826 , 0.41820826,
       0.41820826, 0.41820826, 0.41820826, 0.41820826, 0.41820826,
       0.51643592, 0.51656285, 0.51643592, 0.51656285, 0.51643592,
       0.51656285, 0.54760249, 0.54760249, 0.54760249, 0.54760249,
       0.54760249, 0.54760249, 0.51682907, 0.51803736, 0.51682907,
       0.51803736, 0.51682907, 0.51803736, 0.41385595, 0.41385595,
       0.41385595, 0.41385595, 0.41385595, 0.41385595, 0.51649904,
       0.51649904, 0.51649904, 0.51649904, 0.51649904, 0.51649904,
       0.54651265, 0.54651265, 0.54651265, 0.54651265, 0.54651265,
       0.54651265, 0.51649904, 0.51649904, 0.51649904, 0.51649904,
       0.51649904, 0.51649904, 0.63107327, 0.63107327, 0.63107327,
       0.63107327, 0.63107327, 0.63107327, 0.62111696, 0.63273916,
       0.62111696, 0.63273916, 0.62111696, 0.63273916, 0.65095664,
       0.65095664, 0.65095664, 0.65095664, 0.65095664, 0.65095664,
       0.63695743, 0.64690078, 0.63695743, 0.64690078, 0.63695743,
       0.64690078, 0.63164145, 0.63164145, 0.63107327, 0.63107327,
       0.62912109, 0.62912109, 0.62067648, 0.6323706 , 0.62111696,
       0.63273916, 0.61929627, 0.63126369, 0.65024392, 0.65024392,
       0.65095664, 0.65095664, 0.64799947, 0.64799947, 0.63802637,
       0.6486421 , 0.63695743, 0.64690078, 0.63640784, 0.6464826 ,
       0.41820826, 0.41820826, 0.41820826, 0.41820826, 0.41820826,
       0.41820826, 0.51643592, 0.51656285, 0.51643592, 0.51656285,
       0.51643592, 0.51656285, 0.54760249, 0.54760249, 0.54760249,
       0.54760249, 0.54760249, 0.54760249, 0.51682907, 0.51803736,
       0.51682907, 0.51803736, 0.51682907, 0.51803736, 0.41385595,
       0.41385595, 0.41385595, 0.41385595, 0.41385595, 0.41385595,
       0.51649904, 0.51649904, 0.51649904, 0.51649904, 0.51649904,
       0.51649904, 0.54651265, 0.54651265, 0.54651265, 0.54651265,
       0.54651265, 0.54651265, 0.51649904, 0.51649904, 0.51649904,
       0.51649904, 0.51649904, 0.51649904, 0.63107327, 0.63107327,
       0.63107327, 0.63107327, 0.63107327, 0.63107327, 0.62111696,
       0.63273916, 0.62111696, 0.63273916, 0.62111696, 0.63273916,
       0.65095664, 0.65095664, 0.65095664, 0.65095664, 0.65095664,
       0.65095664, 0.63695743, 0.64690078, 0.63695743, 0.64690078,
       0.63695743, 0.64690078, 0.63164145, 0.63164145, 0.63107327,
       0.63107327, 0.62912109, 0.62912109, 0.62067648, 0.6323706 ,
       0.62111696, 0.63273916, 0.61929627, 0.63126369, 0.65024392,
       0.65024392, 0.65095664, 0.65095664, 0.64799947, 0.64799947,
       0.63802637, 0.6486421 , 0.63695743, 0.64690078, 0.63640784,
       0.6464826 ,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.63107327,
       0.63107327, 0.63107327, 0.63107327, 0.63107327, 0.63107327,
       0.62111696, 0.63273916, 0.62111696, 0.63273916, 0.62111696,
       0.63273916, 0.65095664, 0.65095664, 0.65095664, 0.65095664,
       0.65095664, 0.65095664, 0.63695743, 0.64690078, 0.63695743,
       0.64690078, 0.63695743, 0.64690078, 0.63164145, 0.63164145,
       0.63107327, 0.63107327, 0.62912109, 0.62912109, 0.62067648,
       0.6323706 , 0.62111696, 0.63273916, 0.61929627, 0.63126369,
       0.65024392, 0.65024392, 0.65095664, 0.65095664, 0.64799947,
       0.64799947, 0.63802637, 0.6486421 , 0.63695743, 0.64690078,
       0.63640784, 0.6464826 ,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.63107327, 0.63107327, 0.63107327, 0.63107327, 0.63107327,
       0.63107327, 0.62111696, 0.63273916, 0.62111696, 0.63273916,
       0.62111696, 0.63273916, 0.65095664, 0.65095664, 0.65095664,
       0.65095664, 0.65095664, 0.65095664, 0.63695743, 0.64690078,
       0.63695743, 0.64690078, 0.63695743, 0.64690078, 0.63164145,
       0.63164145, 0.63107327, 0.63107327, 0.62912109, 0.62912109,
       0.62067648, 0.6323706 , 0.62111696, 0.63273916, 0.61929627,
       0.63126369, 0.65024392, 0.65024392, 0.65095664, 0.65095664,
       0.64799947, 0.64799947, 0.63802637, 0.6486421 , 0.63695743,
       0.64690078, 0.63640784, 0.6464826 ,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'std_test_score': array([0.00934977, 0.00934977, 0.00934977, 0.00934977, 0.00934977,
       0.00934977, 0.00592146, 0.00819447, 0.00592146, 0.00819447,
       0.00592146, 0.00819447, 0.00779229, 0.00779229, 0.00779229,
       0.00779229, 0.00779229, 0.00779229, 0.00867041, 0.00685107,
       0.00867041, 0.00685107, 0.00867041, 0.00685107, 0.00840141,
       0.00840141, 0.00934977, 0.00934977, 0.00564797, 0.00564797,
       0.00860565, 0.00898761, 0.00592146, 0.00819447, 0.00752218,
       0.00751102, 0.00942979, 0.00942979, 0.00779229, 0.00779229,
       0.00514983, 0.00514983, 0.01055491, 0.0084912 , 0.00867041,
       0.00685107, 0.00495975, 0.0047889 , 0.03815468, 0.03815468,
       0.03815468, 0.03815468, 0.03815468, 0.03815468, 0.11850267,
       0.11775183, 0.11850267, 0.11775183, 0.11850267, 0.11775183,
       0.08232829, 0.08232829, 0.08232829, 0.08232829, 0.08232829,
       0.08232829, 0.1200714 , 0.11871321, 0.1200714 , 0.11871321,
       0.1200714 , 0.11871321, 0.03829808, 0.03829808, 0.03829808,
       0.03829808, 0.03829808, 0.03829808, 0.12037941, 0.12037941,
       0.12037941, 0.12037941, 0.12037941, 0.12037941, 0.08372853,
       0.08372853, 0.08372853, 0.08372853, 0.08372853, 0.08372853,
       0.12037941, 0.12037941, 0.12037941, 0.12037941, 0.12037941,
       0.12037941, 0.00934977, 0.00934977, 0.00934977, 0.00934977,
       0.00934977, 0.00934977, 0.00592146, 0.00819447, 0.00592146,
       0.00819447, 0.00592146, 0.00819447, 0.00779229, 0.00779229,
       0.00779229, 0.00779229, 0.00779229, 0.00779229, 0.00867041,
       0.00685107, 0.00867041, 0.00685107, 0.00867041, 0.00685107,
       0.00840141, 0.00840141, 0.00934977, 0.00934977, 0.00564797,
       0.00564797, 0.00860565, 0.00898761, 0.00592146, 0.00819447,
       0.00752218, 0.00751102, 0.00942979, 0.00942979, 0.00779229,
       0.00779229, 0.00514983, 0.00514983, 0.01055491, 0.0084912 ,
       0.00867041, 0.00685107, 0.00495975, 0.0047889 , 0.03815468,
       0.03815468, 0.03815468, 0.03815468, 0.03815468, 0.03815468,
       0.11850267, 0.11775183, 0.11850267, 0.11775183, 0.11850267,
       0.11775183, 0.08232829, 0.08232829, 0.08232829, 0.08232829,
       0.08232829, 0.08232829, 0.1200714 , 0.11871321, 0.1200714 ,
       0.11871321, 0.1200714 , 0.11871321, 0.03829808, 0.03829808,
       0.03829808, 0.03829808, 0.03829808, 0.03829808, 0.12037941,
       0.12037941, 0.12037941, 0.12037941, 0.12037941, 0.12037941,
       0.08372853, 0.08372853, 0.08372853, 0.08372853, 0.08372853,
       0.08372853, 0.12037941, 0.12037941, 0.12037941, 0.12037941,
       0.12037941, 0.12037941, 0.00934977, 0.00934977, 0.00934977,
       0.00934977, 0.00934977, 0.00934977, 0.00592146, 0.00819447,
       0.00592146, 0.00819447, 0.00592146, 0.00819447, 0.00779229,
       0.00779229, 0.00779229, 0.00779229, 0.00779229, 0.00779229,
       0.00867041, 0.00685107, 0.00867041, 0.00685107, 0.00867041,
       0.00685107, 0.00840141, 0.00840141, 0.00934977, 0.00934977,
       0.00564797, 0.00564797, 0.00860565, 0.00898761, 0.00592146,
       0.00819447, 0.00752218, 0.00751102, 0.00942979, 0.00942979,
       0.00779229, 0.00779229, 0.00514983, 0.00514983, 0.01055491,
       0.0084912 , 0.00867041, 0.00685107, 0.00495975, 0.0047889 ,
       0.03815468, 0.03815468, 0.03815468, 0.03815468, 0.03815468,
       0.03815468, 0.11850267, 0.11775183, 0.11850267, 0.11775183,
       0.11850267, 0.11775183, 0.08232829, 0.08232829, 0.08232829,
       0.08232829, 0.08232829, 0.08232829, 0.1200714 , 0.11871321,
       0.1200714 , 0.11871321, 0.1200714 , 0.11871321, 0.03829808,
       0.03829808, 0.03829808, 0.03829808, 0.03829808, 0.03829808,
       0.12037941, 0.12037941, 0.12037941, 0.12037941, 0.12037941,
       0.12037941, 0.08372853, 0.08372853, 0.08372853, 0.08372853,
       0.08372853, 0.08372853, 0.12037941, 0.12037941, 0.12037941,
       0.12037941, 0.12037941, 0.12037941, 0.00934977, 0.00934977,
       0.00934977, 0.00934977, 0.00934977, 0.00934977, 0.00592146,
       0.00819447, 0.00592146, 0.00819447, 0.00592146, 0.00819447,
       0.00779229, 0.00779229, 0.00779229, 0.00779229, 0.00779229,
       0.00779229, 0.00867041, 0.00685107, 0.00867041, 0.00685107,
       0.00867041, 0.00685107, 0.00840141, 0.00840141, 0.00934977,
       0.00934977, 0.00564797, 0.00564797, 0.00860565, 0.00898761,
       0.00592146, 0.00819447, 0.00752218, 0.00751102, 0.00942979,
       0.00942979, 0.00779229, 0.00779229, 0.00514983, 0.00514983,
       0.01055491, 0.0084912 , 0.00867041, 0.00685107, 0.00495975,
       0.0047889 ,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.00934977,
       0.00934977, 0.00934977, 0.00934977, 0.00934977, 0.00934977,
       0.00592146, 0.00819447, 0.00592146, 0.00819447, 0.00592146,
       0.00819447, 0.00779229, 0.00779229, 0.00779229, 0.00779229,
       0.00779229, 0.00779229, 0.00867041, 0.00685107, 0.00867041,
       0.00685107, 0.00867041, 0.00685107, 0.00840141, 0.00840141,
       0.00934977, 0.00934977, 0.00564797, 0.00564797, 0.00860565,
       0.00898761, 0.00592146, 0.00819447, 0.00752218, 0.00751102,
       0.00942979, 0.00942979, 0.00779229, 0.00779229, 0.00514983,
       0.00514983, 0.01055491, 0.0084912 , 0.00867041, 0.00685107,
       0.00495975, 0.0047889 ,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.00934977, 0.00934977, 0.00934977, 0.00934977, 0.00934977,
       0.00934977, 0.00592146, 0.00819447, 0.00592146, 0.00819447,
       0.00592146, 0.00819447, 0.00779229, 0.00779229, 0.00779229,
       0.00779229, 0.00779229, 0.00779229, 0.00867041, 0.00685107,
       0.00867041, 0.00685107, 0.00867041, 0.00685107, 0.00840141,
       0.00840141, 0.00934977, 0.00934977, 0.00564797, 0.00564797,
       0.00860565, 0.00898761, 0.00592146, 0.00819447, 0.00752218,
       0.00751102, 0.00942979, 0.00942979, 0.00779229, 0.00779229,
       0.00514983, 0.00514983, 0.01055491, 0.0084912 , 0.00867041,
       0.00685107, 0.00495975, 0.0047889 ,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan]), 'rank_test_score': array([193, 193, 193, 193, 193, 193, 253, 145, 253, 145, 253, 145,   1,
         1,   1,   1,   1,   1, 115,  79, 115,  79, 115,  79, 175, 175,
       193, 193, 241, 241, 277, 169, 253, 145, 283, 187,  49,  49,   1,
         1,  67,  67, 109,  61, 115,  79, 139, 103, 397, 397, 397, 397,
       397, 397, 388, 343, 388, 343, 388, 343, 289, 289, 289, 289, 289,
       289, 334, 325, 334, 325, 334, 325, 415, 415, 415, 415, 415, 415,
       352, 352, 352, 352, 352, 352, 307, 307, 307, 307, 307, 307, 352,
       352, 352, 352, 352, 352, 193, 193, 193, 193, 193, 193, 253, 145,
       253, 145, 253, 145,   1,   1,   1,   1,   1,   1, 115,  79, 115,
        79, 115,  79, 175, 175, 193, 193, 241, 241, 277, 169, 253, 145,
       283, 187,  49,  49,   1,   1,  67,  67, 109,  61, 115,  79, 139,
       103, 397, 397, 397, 397, 397, 397, 388, 343, 388, 343, 388, 343,
       289, 289, 289, 289, 289, 289, 334, 325, 334, 325, 334, 325, 415,
       415, 415, 415, 415, 415, 352, 352, 352, 352, 352, 352, 307, 307,
       307, 307, 307, 307, 352, 352, 352, 352, 352, 352, 193, 193, 193,
       193, 193, 193, 253, 145, 253, 145, 253, 145,   1,   1,   1,   1,
         1,   1, 115,  79, 115,  79, 115,  79, 175, 175, 193, 193, 241,
       241, 277, 169, 253, 145, 283, 187,  49,  49,   1,   1,  67,  67,
       109,  61, 115,  79, 139, 103, 397, 397, 397, 397, 397, 397, 388,
       343, 388, 343, 388, 343, 289, 289, 289, 289, 289, 289, 334, 325,
       334, 325, 334, 325, 415, 415, 415, 415, 415, 415, 352, 352, 352,
       352, 352, 352, 307, 307, 307, 307, 307, 307, 352, 352, 352, 352,
       352, 352, 193, 193, 193, 193, 193, 193, 253, 145, 253, 145, 253,
       145,   1,   1,   1,   1,   1,   1, 115,  79, 115,  79, 115,  79,
       175, 175, 193, 193, 241, 241, 277, 169, 253, 145, 283, 187,  49,
        49,   1,   1,  67,  67, 109,  61, 115,  79, 139, 103, 527, 503,
       501, 500, 499, 498, 497, 496, 495, 494, 493, 502, 492, 490, 489,
       535, 479, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 526,
       517, 518, 519, 520, 521, 522, 523, 524, 525, 505, 515, 504, 491,
       482, 483, 484, 485, 486, 487, 488, 193, 193, 193, 193, 193, 193,
       253, 145, 253, 145, 253, 145,   1,   1,   1,   1,   1,   1, 115,
        79, 115,  79, 115,  79, 175, 175, 193, 193, 241, 241, 277, 169,
       253, 145, 283, 187,  49,  49,   1,   1,  67,  67, 109,  61, 115,
        79, 139, 103, 529, 554, 555, 556, 557, 558, 559, 560, 561, 562,
       563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 553,
       552, 551, 539, 530, 531, 532, 533, 534, 480, 536, 537, 538, 540,
       550, 541, 542, 543, 544, 545, 546, 547, 548, 549, 481, 575, 193,
       193, 193, 193, 193, 193, 253, 145, 253, 145, 253, 145,   1,   1,
         1,   1,   1,   1, 115,  79, 115,  79, 115,  79, 175, 175, 193,
       193, 241, 241, 277, 169, 253, 145, 283, 187,  49,  49,   1,   1,
        67,  67, 109,  61, 115,  79, 139, 103, 457, 458, 459, 460, 461,
       462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
       475, 476, 477, 455, 456, 478, 454, 433, 434, 435, 436, 437, 438,
       439, 440, 441, 442, 453, 443, 444, 445, 446, 447, 448, 449, 450,
       451, 452, 528, 576])}

Accuracy: 0.017543859649122806
F1 Score (weighted): 0.5677436390004177
F1 Score (micro): 0.6485904112048841
Hamming Loss: 0.08174603174603175
Precision (average by samples): 0.7330365958185507

Classification Report: 
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        13
           1       0.47      0.15      0.23        61
           2       0.66      0.76      0.71       244
           3       0.00      0.00      0.00         7
           4       0.66      0.87      0.75       237
           5       0.42      0.33      0.37        83
           6       1.00      0.06      0.11        18
           7       0.53      0.22      0.31        36
           8       0.22      0.09      0.13        43
           9       0.43      0.25      0.32        12
          10       0.00      0.00      0.00        15
          11       0.62      0.15      0.24        33
          12       0.00      0.00      0.00        23
          13       0.50      0.06      0.10        18
          14       0.20      0.11      0.14        19
          15       0.00      0.00      0.00         8
          16       0.17      0.07      0.10        30
          17       0.00      0.00      0.00        11
          18       0.00      0.00      0.00        20
          19       0.33      0.13      0.19        38
          20       0.33      0.11      0.17         9
          21       0.25      0.08      0.12        25
          22       0.60      0.12      0.19        26
          23       0.00      0.00      0.00         8
          24       0.25      0.11      0.16        35
          25       0.50      0.09      0.15        11
          26       0.00      0.00      0.00         7
          27       0.85      0.98      0.91       322
          28       0.25      0.11      0.15         9
          29       0.38      0.09      0.15        53
          30       1.00      1.00      1.00       398
          31       0.50      0.09      0.15        11
          32       0.00      0.00      0.00        13
          33       0.50      0.09      0.15        11
          34       0.00      0.00      0.00         5
          35       0.81      0.92      0.86       278
          36       0.67      0.12      0.21        16
          37       0.77      0.94      0.85       298
          38       0.25      0.08      0.12        13
          39       0.38      0.11      0.17        45
          40       0.40      0.20      0.27        10
          41       0.00      0.00      0.00        11
          42       0.00      0.00      0.00         5
          43       0.50      0.07      0.13        41
          44       0.40      0.13      0.20        77
          45       0.36      0.17      0.24        23
          46       0.00      0.00      0.00        11
          47       0.50      0.10      0.17        10
          48       0.00      0.00      0.00        11
          49       0.75      0.18      0.29        17
          50       0.00      0.00      0.00        13
          51       0.50      0.07      0.12        14
          52       1.00      0.05      0.09        21
          53       0.33      0.11      0.17        18
          54       0.00      0.00      0.00         8
          55       0.14      0.03      0.05        30
          56       0.25      0.06      0.10        31
          57       0.00      0.00      0.00        27
          58       0.43      0.32      0.37       112
          59       0.00      0.00      0.00        35

   micro avg       0.73      0.59      0.65      3087
   macro avg       0.33      0.16      0.19      3087
weighted avg       0.61      0.59      0.57      3087
 samples avg       0.73      0.62      0.64      3087
